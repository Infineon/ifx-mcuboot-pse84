<?xml version="1.0" encoding="utf-8"?>

<PersonalityTemplate
    id="edgeprotect_bootloader_cfg"
    name="EdgeProtect Bootloader Configuration"
    version="1.0"
    xmlns="http://cypress.com/xsd/cyhwpersonality_v14">

  <Constants>
    <Const id="MAX_REGIONS" value="16" />
    <Const id="LAST_REGION" value="15" />

    <!-- NOTE: Need to have a max to match number of ranges for behaivor -->
    <Const id="MAX_APPLICATIONS" value="16" />

    <!-- Memory base addresses for different device types -->
    <Const id="BASE_ADDR_INTERNAL_S_SRAM" value="0x34000000" />
    <Const id="BASE_ADDR_INTERNAL_S_ITCM" value="0x58000000" />
    <Const id="BASE_ADDR_INTERNAL_S_SOCMEM" value="0x36000000" />

    <!-- Memory erase values for different memory types -->
    <Const id="ERASE_VAL_INTERNAL_MEMORIES" value="0x0U" />
    <Const id="ERASE_VAL_EXTERNAL_FLASH" value="0xffU" />

    
    <!-- For memory selection based on result from memoryIds() -->
    <Const id="MAX_MEMORIES" value="32" />

  </Constants>

  <VirtualResourceDefinition
      ipblock="VirtualResource"
      type="vres"
      count="1">
    <VirtualResourceDefinition
        type="edgeprotect_bootloader_cfg"
        display_name="Edge Protect Bootloader Solution"
        display_path="Solution"
        display_mode="STATIC"
        count="1">
      <DependentBlock type="vres.memory_region_data" />
    </VirtualResourceDefinition>
  </VirtualResourceDefinition>

  <FittingRules>
    <MappingRules>
      <IpBlock name="VirtualResource" />
      <Resource name="vres.edgeprotect_bootloader_cfg" />
    </MappingRules>
  </FittingRules>

  <BehaviorImplementation>
    <Implements type="memory_ranges_v1">
      <ExposedMember key="memoryRangeCount" paramId="image_count" />
      <ExposedMember key="memoryRangeName$idx" paramId="app$idx_manual_primary_name" repeatCount="$MAX_APPLICATIONS" />
      <ExposedMember key="memoryRangeDescription$idx" paramId="app$idx_manual_primary_description" repeatCount="$MAX_APPLICATIONS" />
      <ExposedMember key="memoryRangeMemoryId$idx" paramId="app$idx_manual_primary_memory" repeatCount="$MAX_APPLICATIONS" />
      <ExposedMember key="memoryRangeOffset$idx" paramId="app$idx_manual_primary_offset" repeatCount="$MAX_APPLICATIONS" />
      <ExposedMember key="memoryRangeSize$idx" paramId="app$idx_manual_primary_size" repeatCount="$MAX_APPLICATIONS" />
    </Implements>
  </BehaviorImplementation>

  <Parameters>
    <!-- Documentation for the personality -->
    <ParamDoc
        id="bootloaderDoc"
        name="Edge Protect Bootloader documentation"
        group="Documentation"
        default="This personality provides configuration options for MCUBoot bootloader including upgrade mode, logging level, fault injection hardening, and security features."
        desc="Documentation for the EdgeProtect Bootloader Configuration personality"
        linkText="EdgeProtect Bootloader Configuration Overview"
        visible="true" />

    <!-- Upgrade mode selection -->
    <ParamChoice
        id="upgrade_mode"
        name="Upgrade mode"
        group="MCUBoot config"
        default="overwrite"
        editable="true"
        visible="true"
        desc="Selects the upgrade strategy for the bootloader">
      <Entry name="overwrite" value="overwrite" visible="true" />
      <Entry name="swap" value="swap" visible="true" />
    </ParamChoice>

    <!-- Logging level selection -->
    <ParamChoice
        id="logging_level"
        name="Logging level"
        group="MCUBoot config"
        default="dbg"
        editable="true"
        visible="true"
        desc="Sets the verbosity level for bootloader logs">
      <Entry name="off" value="off" visible="true" />
      <Entry name="dbg" value="dbg" visible="true" />
      <Entry name="inf" value="inf" visible="true" />
      <Entry name="wrn" value="wrn" visible="true" />
      <Entry name="err" value="err" visible="true" />
    </ParamChoice>

    <!-- FIH level selection -->
    <ParamChoice
        id="fih_level"
        name="FIH level"
        group="MCUBoot config"
        default="off"
        editable="true"
        visible="true"
        desc="Configures Fault Injection Hardening level">
      <Entry name="off" value="off" visible="true" />
      <Entry name="low" value="low" visible="true" />
      <Entry name="med" value="med" visible="true" />
      <Entry name="high" value="high" visible="true" />
    </ParamChoice>

    <!-- Image count selection -->
    <ParamChoice
        id="image_count"
        name="Image count"
        group="MCUBoot config"
        default="3"
        editable="true"
        visible="true"
        desc="Specifies the number of application images to manage">
      <Entry name="1" value="1" visible="true" />
      <Entry name="2" value="2" visible="true" />
      <Entry name="3" value="3" visible="true" />
      <Entry name="4" value="4" visible="true" />
      <Entry name="5" value="5" visible="true" />
    </ParamChoice>
    
    <!-- Validate boot slot -->
    <ParamBool
        id="validate_boot_slot"
        name="Validate boot slot"
        group="MCUBoot config"
        default="false"
        editable="true"
        visible="true"
        desc="Enables validation of the boot slot" />

    <!-- Validate upgrade slot -->
    <ParamBool
        id="validate_upgrade_slot"
        name="Validate upgrade slot"
        group="MCUBoot config"
        default="false"
        editable="true"
        visible="true"
        desc="Enables validation of the upgrade slot" />
    
    <!-- Built in keys -->
    <ParamBool
        id="built_in_keys"
        name="Built in keys"
        group="MCUBoot config"
        default="true"
        editable="true"
        visible="false"
        desc="Enables the use of built-in cryptographic keys" />
    
    <!-- Measured boot -->
    <ParamBool
        id="measured_boot"
        name="Measured boot"
        group="MCUBoot config"
        default="false"
        editable="true"
        visible="true"
        desc="Enables measured boot functionality" />

    <!-- Measured boot configuration fields (visible when measured boot is enabled) -->
    <ParamString
        id="max_boot_record_size"
        name="Max boot record size"
        group="MCUBoot config/Measured Boot"
        default="0x200"
        editable="true"
        visible="`${measured_boot eq true}`"
        desc="Hex size for max boot record" />

    <ParamPersonality
        id="measured_boot_record_region"
        name="MCUBoot shared data region"
        group="MCUBoot config/Measured Boot"
        visible="`${measured_boot eq true}`"
        editable="true"
        blockType="vres\.memory_region_data"
        canBeEmpty="false"
        multiSelect="false"
        displayMemberKey="regionId"
        desc="Select memory region for application for Shared data" />

    <ParamString
        id="mcuboot_shared_data_offset"
        name="MCUBoot shared data base address"
        group="MCUBoot config/Measured Boot"
        default='`${toHex(getExposedMember(getBlockFromInstance(measured_boot_record_region), &quot;offset&quot;))}`'
        editable="false"
        visible="false"
        desc="Hex address for MCUBoot shared data base" />

    <ParamString
        id="mcuboot_shared_data_size"
        name="MCUBoot shared data size"
        group="MCUBoot config/Measured Boot"
        default='`${toHex(getExposedMember(getBlockFromInstance(measured_boot_record_region), &quot;size&quot;))}`'
        editable="false"
        visible="false"
        desc="Hex size for MCUBoot shared data" />
        
    <!-- HW rollback protection -->
    <ParamBool
        id="hw_rollback_protection"
        name="HW rollback protection"
        group="MCUBoot config"
        default="false"
        editable="true"
        visible="true"
        desc="Enables hardware-based rollback protection" />

    
    <!-- Dependency check -->
    <ParamBool
        id="dependency_check"
        name="Dependency check"
        group="MCUBoot config"
        default="false"
        editable="true"
        visible="true"
        desc="Enables dependency checking between images" />
        
    <!-- SW downgrade prevention -->
    <ParamBool
        id="sw_downgrade_prevention"
        name="SW downgrade prevention"
        group="MCUBoot config"
        default="false"
        editable="true"
        visible="`${upgrade_mode eq &quot;overwrite&quot;}`"
        desc="Enables software downgrade prevention mechanism" />
    <ParamBool
        id="sw_downgrade_prevention_enabled"
        name="SW downgrade prevention enabled"
        group="MCUBoot config"
        default="`${sw_downgrade_prevention &amp;&amp; (upgrade_mode eq &quot;overwrite&quot;)}`"
        editable="false"
        visible="false"
        desc="Internal variable. Software downgrade prevention enabled." />

    <!-- Bootloader Application Configuration -->
    <ParamChoice
        id="bootloader_device"
        name="Boot device"
        group="Bootloader Application Configuration"
        default="INTERNAL_RRAM"
        editable="true"
        visible="false"
        desc="Storage device for bootloader">
      <Entry name="INTERNAL_RRAM" value="INTERNAL_RRAM" visible="true" />
      <Entry name="EXTERNAL_S_FLASH" value="EXTERNAL_S_FLASH" visible="true" />
      <Entry name="EXTERNAL_NS_FLASH" value="EXTERNAL_NS_FLASH" visible="true" />
    </ParamChoice>

    <!-- Bootloader Hex File Paths for SignerCombiner -->
    <ParamString
        id="bootloader_project_name"
        name="Bootloader project name"
        group="Bootloader Application Configuration"
        default="proj_bootloader"
        editable="true"
        visible="true"
        desc="Project name is required for correct generatin of debug and program configurations. Must be equal to APPNAME in project Makefile." />
    <ParamString
        id="bootloader_input_hex_path"
        name="Input hex file path"
        group="Bootloader Application Configuration"
        default="../../../../build/project_hex/proj_bootloader.hex"
        editable="true"
        visible="true"
        desc="Path to the input hex file for bootloader. Path is relative to the SignerCombiner JSON file location." />
        
    <ParamString
        id="bootloader_output_hex_path"
        name="Output hex file path"
        group="Bootloader Application Configuration"
        default="../../../../build/project_hex/proj_bootloader_signed.hex"
        editable="true"
        visible="true"
        desc="Path to the output signed hex file for bootloader. Path is relative to the SignerCombiner JSON file location." />

    <!-- Bootloader Base Address and Resultant Address -->
    <ParamString
        id="bootloader_device_type"
        name="Bootloader device type"
        group="Bootloader Application Configuration"
        default='`${bootloader_device eq "RRAM" ? "INTERNAL_RRAM" : (bootloader_device eq "SMIF0MEM0" || bootloader_device eq "SMIF0MEM1" || bootloader_device eq "SMIF0MEM2" || bootloader_device eq "SMIF0MEM3" || bootloader_device eq "SMIF1MEM0" || bootloader_device eq "SMIF1MEM1" || bootloader_device eq "SMIF1MEM2" || bootloader_device eq "SMIF1MEM3" ? "EXTERNAL_S_FLASH" : bootloader_device)}`'
        editable="false"
        visible="false"
        desc="Resolved bootloader device type based on device" />

     <!-- Bootloader measured boot -->
     <ParamString
        id="bootloader_image_version"
        name="Bootloader image version"
        group="Bootloader Application Configuration"
        default="1.0.0"
        editable="true"
        visible='`${measured_boot}`'
        desc="Bootloader image version in the following format: 'major'.'minor'.'patch'. For example: 1.0.0, 5.3.8, etc" />
     
     <ParamString
        id="bootloader_image_boot_record"
        name="Bootloader image boot record"
        group="Bootloader Application Configuration"
        default="proj_bldr"
        editable="true"
        visible='`${measured_boot}`'
        desc="Bootloader image boot record (12 characters max)" />
        
    <!-- Application Configurations using Repeat -->

    <Repeat count="$MAX_APPLICATIONS">
      <!-- Application $idx Secondary Slot Region Selection -->
      <ParamPersonality
        id="app$idx_secondary_region"
        name="Secondary slot region"
        group="Application $idx Configuration/Memory Slots"
        visible="`${$idx == 0 ? true : $idx &lt; image_count}`"
        editable="true"
        blockType="vres\.memory_region_data"
        canBeEmpty="true"
        multiSelect="false"
        displayMemberKey="regionId"
        desc="Select existing memory region for application $idx secondary slot" />


      <ParamBool
        id="app$idx_ram_load"
        name="Ram load"
        group="Application $idx Configuration/RAM Load"
        default="false"
        editable="true"
        visible="`${$idx == 0 ? true : $idx &lt; image_count}`"
        desc="Enable to load application $idx into RAM" />

      <!-- Application $idx RAM Load Memory Region Selection -->
      <ParamPersonality
        id="app$idx_ram_load_region"
        name="RAM load region"
        group="Application $idx Configuration/RAM Load"
        visible="`${($idx == 0 ? true : $idx &lt; image_count) &amp;&amp; app$idx_ram_load eq true}`"
        editable="true"
        blockType="vres\.memory_region_data"
        canBeEmpty="false"
        multiSelect="false"
        displayMemberKey="regionId"
        desc="Select memory region for application $idx RAM load" />

      <ParamString
        id="app$idx_ram_load_offset"
        name="RAM load region offset"
        group="Application $idx Configuration/RAM Load"
        default='`${getExposedMember(getBlockFromInstance(app$idx_ram_load_region), &quot;offset&quot;)}`'
        editable="false"
        visible="false"
        desc="RAM load region offset to load application $idx (from selected region)" />

      <!-- Application $idx RAM Load Region Details (hidden, for reference) -->
      <ParamString
        id="app$idx_ram_load_region_size"
        name="RAM load region size"
        group="Application $idx Configuration/RAM Load"
        default='`${getExposedMember(getBlockFromInstance(app$idx_ram_load_region), &quot;size&quot;)}`'
        editable="false"
        visible="false"
        desc="Size of selected RAM load region for application $idx" />

      <ParamString
        id="app$idx_ram_load_memory_type"
        name="RAM load memory type"
        group="Application $idx Configuration/RAM Load"
        default='`${getExposedMember(getBlockFromInstance(app$idx_ram_load_region), &quot;memoryId&quot;)}`'
        editable="false"
        visible="false"
        desc="Memory type of selected RAM load region for application $idx" />

	    <ParamString
        id="app$idx_ramload_device_type"
        name="RAM load device type"
        group="Application $idx Configuration/RAM Load"
        default='`${app$idx_ram_load_memory_type eq "CM55_ITCM_INTERNAL" ? "INTERNAL_S_ITCM" : app$idx_ram_load_memory_type eq "SOCMEM_RAM" ? "INTERNAL_S_SOCMEM" : "INTERNAL_S_SRAM"  }`'
        editable="false"
        visible="false"
        desc="Resolved RAM Load device type for application $idx based on reserved memory region" />

	    <!-- Application $idx RAM Load Region Base Address -->
      <ParamString
        id="app$idx_ramload_base_address"
        name="RAM load base address"
        group="Application $idx Configuration/RAM Load"
        default='`${app$idx_ramload_device_type eq "INTERNAL_S_ITCM" ? toHex($BASE_ADDR_INTERNAL_S_ITCM) : app$idx_ramload_device_type eq "INTERNAL_S_SOCMEM" ? toHex($BASE_ADDR_INTERNAL_S_SOCMEM) : toHex($BASE_ADDR_INTERNAL_S_SRAM)}`'
        editable="false"
        visible="false"
        desc="Base address of RAM Load region for application $idx" />

      <!-- Application $idx RAM Load Region Address -->
      <ParamString
        id="app$idx_ramload_address"
        name="RAM load region address"
        group="Application $idx Configuration/RAM Load"
        default='`${toHex((app$idx_ramload_device_type eq "INTERNAL_S_ITCM" ? $BASE_ADDR_INTERNAL_S_ITCM : app$idx_ramload_device_type eq "INTERNAL_S_SOCMEM" ? $BASE_ADDR_INTERNAL_S_SOCMEM : $BASE_ADDR_INTERNAL_S_SRAM) + app$idx_ram_load_offset)}`'
        editable="false"
        visible="`${($idx == 0 ? true : $idx &lt; image_count) &amp;&amp; app$idx_ram_load eq true}`"
        desc="Address of the RAM Load region for application $idx." />

      <!-- Application $idx Security Configuration -->
      <ParamChoice
        id="app$idx_key_source"
        name="Key source"
        group="Application $idx Configuration/Security &amp; Cryptography"
        default="provisioned_keys"
        editable="true"
        visible="false"
        desc="Select the source of cryptographic keys for application $idx">
        <Entry name="Provisioned keys" value="provisioned_keys" visible="true" />
      </ParamChoice>

      <!-- Application $idx Provisioned Keys Configuration -->
      <ParamChoice
        id="app$idx_sig_verify_algo_provisioned"
        name="Signature verification algorithm"
        group="Application $idx Configuration/Security &amp; Cryptography"
        default="ecdsa_p256"
        editable="true"
        visible="false"
        desc="Algorithm used for signature verification of application $idx">
        <Entry name="ECDSA with P-256" value="ecdsa_p256" visible="true" />
      </ParamChoice>

      <ParamRange
        id="app$idx_sig_verify_key_id"
        name="Signature verification key ID"
        group="Application $idx Configuration/Security &amp; Cryptography"
        default="0"
        min="0"
        max="65535"
        resolution="1"
        editable="true"
        visible="false"
        desc="ID of the provisioned signature verification key for application $idx" />

      <ParamChoice
        id="app$idx_key_encrypt_algo_provisioned"
        name="Key encryption algorithm"
        group="Application $idx Configuration/Security &amp; Cryptography"
        default="ecies_p256"
        editable="true"
        visible="false"
        desc="Algorithm used for key encryption for application $idx">
        <Entry name="ECIES-P256" value="ecies_p256" visible="true" />
      </ParamChoice>

      <ParamString
        id="app$idx_kek_public_key_path"
        name="KeK public key path"
        group="Application $idx Configuration/Security &amp; Cryptography"
        default=""
        editable="true"
        visible="false"
        desc="Path to the Key Encryption Key (KeK) public key file for application $idx. Path is relative to the SignerCombiner JSON file location." />

      <!-- Application $idx Hex File Paths for SignerCombiner -->
      <ParamString
        id="app$idx_project_name"
        name="Project name"
        group="Application $idx Configuration/Build &amp; Deployment"
        default="`${$idx == 0 ? &quot;proj_cm33_s&quot; : ($idx == 1 ? &quot;proj_cm33_ns&quot; : ($idx == 2 ? &quot;proj_cm55&quot; : &quot;proj_app_$idx&quot;))}`"
        editable="true"
        visible="`${$idx == 0 ? true : $idx &lt; image_count}`"
        desc="Project name is required for correct generatin of debug and program configurations. Must be equal to APPNAME in project Makefile." />
      <ParamString
        id="app$idx_input_hex_path"
        name="Input hex file path"
        group="Application $idx Configuration/Build &amp; Deployment"
        default="`${$idx == 0 ? &quot;../../../../build/project_hex/proj_cm33_s.hex&quot; : ($idx == 1 ? &quot;../../../../build/project_hex/proj_cm33_ns.hex&quot; : ($idx == 2 ? &quot;../../../../build/project_hex/proj_cm55.hex&quot; : &quot;../../../../build/project_hex/app_$idx.hex&quot;))}`"
        editable="true"
        visible="`${$idx == 0 ? true : $idx &lt; image_count}`"
        desc="Path to the input hex file for application $idx. Path is relative to the SignerCombiner JSON file location." />
      <ParamString
        id="app$idx_output_hex_path"
        name="Output hex file path"
        group="Application $idx Configuration/Build &amp; Deployment"
        default="`${$idx == 0 ? &quot;../../../../build/project_hex/proj_cm33_s_signed.hex&quot; : ($idx == 1 ? &quot;../../../../build/project_hex/proj_cm33_ns_signed.hex&quot; : ($idx == 2 ? &quot;../../../../build/project_hex/proj_cm55_signed.hex&quot; : &quot;../../../../build/project_hex/app_$idx_signed.hex&quot;))}`"
        editable="true"
        visible="`${$idx == 0 ? true : $idx &lt; image_count}`"
        desc="Path to the output signed hex file for application $idx. Path is relative to the SignerCombiner JSON file location." />

      <!-- Application $idx Base Addresses -->
      <ParamString
        id="app$idx_secondary_memory_id"
        name="Secondary slot memory ID"
        group="Application $idx Configuration/Internal Calculations"
        default='`${app$idx_secondary_region ne &quot;&quot; ? getExposedMember(getBlockFromInstance(app$idx_secondary_region), &quot;memoryId&quot;) : &quot;&quot;}`'
        editable="false"
        visible="false"
        desc="Memory ID of the selected secondary slot region for application $idx" />
      
      <ParamString
        id="app$idx_secondary_memory_offset"
        name="Secondary slot memory offset"
        group="Application $idx Configuration/Internal Calculations"
        default='`${getExposedMember(getBlockFromInstance(app$idx_secondary_region), &quot;offset&quot;)}`'
        editable="false"
        visible="false"
        desc="Memory offset of the selected secondary slot region for application $idx" />
      
      <ParamString
        id="app$idx_secondary_memory_view_maps"
        name="Secondary slot view maps"
        group="Application $idx Configuration/Internal Calculations"
        default='`${app$idx_secondary_memory_id ne &quot;&quot; ? memoryViewMaps(app$idx_secondary_memory_id, &quot;CORE_NAME_CM33_0_S&quot;) : &quot;&quot;}`'
        editable="false"
        visible="false"
        desc="Available view maps for secondary slot memory of application $idx" />
      
      <ParamString
        id="app$idx_secondary_base_address_dynamic"
        name="Secondary slot base address (Dynamic)"
        group="Application $idx Configuration/Internal Calculations"
        default='`${toHex(memoryOffsetToAddress(&quot;CORE_NAME_CM33_0_S&quot;, app$idx_secondary_memory_view_maps ne &quot;&quot; ? splitAt(app$idx_secondary_memory_view_maps, 0) : &quot;&quot;, app$idx_secondary_memory_id, 0))}`'
        editable="false"
        visible="false"
        desc="Dynamically calculated base address using Memory Context API for application $idx secondary slot" />
      
      <ParamString
        id="app$idx_secondary_absolute_address"
        name="Secondary slot absolute address"
        group="Application $idx Configuration/Internal Calculations"
        default='`${toHex(memoryOffsetToAddress(&quot;CORE_NAME_CM33_0_S&quot;, app$idx_secondary_memory_view_maps ne &quot;&quot; ? splitAt(app$idx_secondary_memory_view_maps, 0) : &quot;&quot;, app$idx_secondary_memory_id, app$idx_secondary_memory_offset))}`'
        editable="false"
        visible="false"
        desc="Absolute address (base + offset) for secondary slot region of application $idx" />

       <!-- Application $idx Signature -->
      <ParamString
        id="app$idx_signature_key_id"
        name="Signing key ID"
        group="Application $idx Configuration/Build &amp; Deployment"
        default="1"
        editable="true"
        visible='`${validate_upgrade_slot eq true ? $idx == 0 ? true : $idx &lt; image_count : false}`'
        desc="Signature key ID for application $idx used by the bootloader to verify signature of this image" />
      <ParamString
        id="app$idx_signature_priv_key_path"
        name="Signing private key path"
        group="Application $idx Configuration/Build &amp; Deployment"
        default="../../../../keys/oem_private_key_0.pem"
        editable="true"
        visible='`${validate_upgrade_slot eq true ? $idx == 0 ? true : $idx &lt; image_count : false}`'
        desc="Path to the private key used for signing of application  $idx. Path is relative to the SignerCombiner JSON file location." />
      
     <!-- Application $idx measured boot -->
     <ParamString
        id="app$idx_image_version"
        name="Image version"
        group="Application $idx Configuration/Build &amp; Deployment"
        default="1.0.0"
        editable="true"
        visible='`${(measured_boot eq true || dependency_check eq true || sw_downgrade_prevention_enabled) ? $idx == 0 ? true : $idx &lt; image_count : false}`'
        desc="Image version in the following format: 'major'.'minor'.'patch'. For example: 1.0.0, 5.3.8, etc" />

       <ParamString
        id="app$idx_image_boot_record"
        name="Image boot record"
        group="Application $idx Configuration/Build &amp; Deployment"
        default="App_$idx"
        editable="true"
        visible='`${measured_boot eq true ? $idx == 0 ? true : $idx &lt; image_count : false}`'
        desc="Image boot record (12 characters max)" />
        
     <ParamString
        id="app$idx_image_dependencies"
        name="Image dependencies"
        group="Application $idx Configuration/Hardware Security &amp; Compliance"
        default=""
        editable="true"
        visible='`${dependency_check eq true ? $idx == 0 ? true : $idx &lt; image_count : false}`'
        desc="Set image dependencies in the format: (image_ID, image_version) where the image_ID on which this image depends. It starts from 0. image_version version on which this image depends. One image can depend on the several other image. I.e. (1, 1.1.0), (2, 2.0.0)" />

      <ParamString
        id="app$idx_hw_rollback_number"
        name="HW security counter number"
        group="Application $idx Configuration/Hardware Security &amp; Compliance"
        default='`${2 + $idx}`'
        editable="true"
        visible='`${hw_rollback_protection &amp;&amp; ($idx == 0 ? true : $idx &lt; image_count)}`'
        desc="Security counter number for image $idx, range 0-15, 0 and 1 are reserved for using by Extended Boot" />
     
     <ParamString
        id="app$idx_hw_rollback_value"
        name="HW security counter value"
        group="Application $idx Configuration/Hardware Security &amp; Compliance"
        default="1"
        editable="true"
        visible='`${hw_rollback_protection &amp;&amp; ($idx == 0 ? true : $idx &lt; image_count)}`'
        desc="Security counter value for image, min value = 1, max value = 63" />

    </Repeat>

    <!-- QSPI Configurator Integration -->
    <ParamString
        id="cfgFileName"
        name="QSPI Config File"
        group="QSPI Configuration"
        default="`${cy_design_filename() . &quot;.cyqspi&quot;}`"
        visible="false"
        editable="false"
        desc="QSPI configuration file name" />
    
    <ParamString
        id="cfgFilePath"
        name="QSPI Config Path"
        group="QSPI Configuration"
        default="`${cy_design_path() . &quot;/&quot; . cfgFileName}`"
        visible="false"
        editable="false"
        desc="Path to QSPI configuration file" />
    
    <ParamCustom
        id="qspi_configurator"
        name="QSPI Configurator"
        group="QSPI Configuration"
        path="`${cy_tools_path(&quot;qspi-configurator&quot;) . &quot;/qspi-configurator&quot;}`"
        visible="false"
        editable="false"
        desc="Launch QSPI Configurator tool to configure external flash memories">
      <Arg value="`${&quot;--config=&quot; . cfgFilePath}`" />
      <Arg value="`${&quot;--output-dir=&quot; . cy_codegen_path()}`" />
    </ParamCustom>

    <!-- Memory Context API Information -->
    <ParamString
        id="available_memories"
        name="Available Memories"
        group="Memory Information"
        default="`${memoryIds()}`"
        visible="false"
        editable="false"
        desc="List of all available physical memories in the device" />
    
    <ParamRange
        id="memory_count"
        name="Memory Count"
        group="Memory Information"
        default="`${splitCount(memoryIds())}`"
        min="0"
        max="32"
        resolution="1"
        visible="false"
        editable="false"
        desc="Total number of available memories" />
    
    <ParamRange
        id="region_count"
        name="Region Count"
        group="Memory Information"
        default="`${memoryRegionCount()}`"
        min="0"
        max="256"
        resolution="1"
        visible="false"
        editable="false"
        desc="Total number of configured memory regions" />

    <!-- SMIF/QSPI Memory Discovery -->
    <Repeat count="32">
      <ParamString
        id="memory_id_$idx"
        name="Memory ID $idx"
        group="Memory Details"
        default="`${$idx &lt; memory_count ? splitAt(memoryIds(), $idx) : &quot;&quot;}`"
        visible="false"
        editable="false"
        desc="Physical memory ID $idx" />
      
      <ParamBool
        id="is_smif_memory_$idx"
        name="Is SMIF Memory $idx"
        group="Memory Details"
        default="`${$idx &lt; memory_count ? hasMatch(memory_id_$idx, &quot;^SMIF&quot;) : false}`"
        visible="false"
        editable="false"
        desc="True if this is a SMIF/QSPI external memory" />
      
      <ParamString
        id="memory_display_name_$idx"
        name="Memory Name $idx"
        group="Memory Details"
        default="`${$idx &lt; memory_count ? memoryDisplayName(memory_id_$idx) : &quot;&quot;}`"
        visible="false"
        editable="false"
        desc="Display name for memory $idx" />
      
      <ParamString
        id="memory_size_$idx"
        name="Memory Size $idx"
        group="Memory Details"
        default="`${toHex(memorySize(memory_id_$idx))}`"
        visible="false"
        editable="false"
        desc="Size of memory $idx in hex" />
      
      <ParamString
        id="memory_alignment_$idx"
        name="Memory Alignment $idx"
        group="Memory Details"
        default="`${toHex(memoryAlignment(memory_id_$idx))}`"
        visible="false"
        editable="false"
        desc="Alignment requirement for memory $idx" />

      <!-- Core View Maps for SMIF Memories -->
      <ParamString
        id="memory_view_maps_$idx"
        name="View Maps $idx"
        group="Memory Details"
        default="`${$idx &lt; memory_count ? memoryViewMaps(memory_id_$idx, &quot;CORE_NAME_CM33_0_S&quot;) : &quot;&quot;}`"
        visible="false"
        editable="false"
        desc="Available view maps for memory $idx" />
      
      <ParamString
        id="memory_base_address_$idx"
        name="Base Address $idx"
        group="Memory Details"
        default="`${toHex(memoryOffsetToAddress(&quot;CORE_NAME_CM33_0_S&quot;, memory_view_maps_$idx ne &quot;&quot; ? splitAt(memory_view_maps_$idx, 0) : &quot;&quot;, memory_id_$idx, 0))}`"
        visible="false"
        editable="false"
        desc="Computed base address for memory $idx" />
    </Repeat>

    <!-- QSPI Memory Summary for Quick Access -->
    <!-- Note: Manual SMIF detection since filter() is not supported -->
    <Repeat count="32">
      <ParamString
        id="memory_check_$idx"
        name="Memory Check $idx"
        group="Memory Details"
        default="`${$idx &lt; memory_count ? splitAt(memoryIds(), $idx) : &quot;&quot;}`"
        visible="false"
        editable="false"
        desc="Memory ID to check" />
      
      <ParamBool
        id="is_smif_check_$idx"
        name="Is SMIF Check $idx"
        group="Memory Details"
        default="`${memory_check_$idx ne &quot;&quot; ? hasMatch(memory_check_$idx, &quot;^SMIF&quot;) : false}`"
        visible="false"
        editable="false"
        desc="Check if memory is SMIF" />
    </Repeat>

    <!-- Count SMIF memories manually -->
    <ParamRange
        id="smif_memory_count"
        name="QSPI Memory Count"
        group="QSPI Configuration"
        default="`${(is_smif_check_0 ? 1 : 0) + (is_smif_check_1 ? 1 : 0) + (is_smif_check_2 ? 1 : 0) + (is_smif_check_3 ? 1 : 0) + (is_smif_check_4 ? 1 : 0) + (is_smif_check_5 ? 1 : 0) + (is_smif_check_6 ? 1 : 0) + (is_smif_check_7 ? 1 : 0)}`"
        min="0"
        max="8"
        resolution="1"
        visible="false"
        editable="false"
        desc="Number of configured QSPI memories" />

    <!-- Build SMIF memory list manually (simplified) -->
    <ParamString
        id="detected_smif_memories"
        name="Detected QSPI Memories"
        group="QSPI Configuration"
        default="`${memoryIds()}`"
        visible="false"
        editable="false"
        desc="All available memories (QSPI memories start with SMIF)" />

    <!-- Individual SMIF memory identification for easy access -->
    <ParamString
        id="first_smif_memory"
        name="First QSPI Memory"
        group="QSPI Configuration"
        default="`${is_smif_check_0 ? memory_check_0 : (is_smif_check_1 ? memory_check_1 : (is_smif_check_2 ? memory_check_2 : (is_smif_check_3 ? memory_check_3 : &quot;&quot;)))}`"
        visible="false"
        editable="false"
        desc="First detected QSPI memory ID" />
    
    <ParamString
        id="second_smif_memory"
        name="Second QSPI Memory"
        group="QSPI Configuration"
        default="`${smif_memory_count &gt; 1 ? (is_smif_check_0 &amp;&amp; is_smif_check_1 ? memory_check_1 : (is_smif_check_0 &amp;&amp; is_smif_check_2 ? memory_check_2 : (is_smif_check_1 &amp;&amp; is_smif_check_2 ? memory_check_2 : memory_check_3))) : &quot;&quot;}`"
        visible="false"
        editable="false"
        desc="Second detected QSPI memory ID" />

    <!-- First SMIF Memory Properties for flash_devices -->
    <ParamString
        id="first_smif_memory_size"
        name="First QSPI Memory Size"
        group="QSPI Configuration"
        default="`${memorySize(first_smif_memory)}`"
        visible="false"
        editable="false"
        desc="Size of first QSPI memory in decimal" />
    
    <ParamString
        id="first_smif_memory_alignment"
        name="First QSPI Memory Alignment"
        group="QSPI Configuration"
        default="`${memoryAlignment(first_smif_memory)}`"
        visible="false"
        editable="false"
        desc="Alignment/erase size of first QSPI memory in decimal" />
    
    <ParamString
        id="first_smif_memory_view_maps"
        name="First QSPI Memory View Maps"
        group="QSPI Configuration"
        default="`${first_smif_memory ne &quot;&quot; ? memoryViewMaps(first_smif_memory, &quot;CORE_NAME_CM33_0_S&quot;) : &quot;&quot;}`"
        visible="false"
        editable="false"
        desc="View maps for first QSPI memory" />
    
    <ParamString
        id="first_smif_memory_ns_base_address"
        name="First QSPI Memory NS Base Address"
        group="QSPI Configuration"
        default="`${memoryOffsetToAddress(&quot;CORE_NAME_CM33_0_S&quot;, first_smif_memory_view_maps ne &quot;&quot; ? splitAt(first_smif_memory_view_maps, 0) : &quot;&quot;, first_smif_memory, 0)}`"
        visible="false"
        editable="false"
        desc="NS base address of first QSPI memory in decimal" />
    
    <ParamString
        id="first_smif_memory_s_base_address"
        name="First QSPI Memory S Base Address"
        group="QSPI Configuration"
        default="`${first_smif_memory_ns_base_address + 268435456}`"
        visible="false"
        editable="false"
        desc="S base address of first QSPI memory (NS + 268435456) in decimal" />

    <!-- SRAM Memory Properties for flash_devices -->
    <ParamString
        id="sram_memory_size"
        name="SRAM Memory Size"
        group="Memory Configuration"
        default="`${memorySize(&quot;SRAM&quot;)}`"
        visible="false"
        editable="false"
        desc="Size of SRAM memory in decimal" />
    
    <ParamString
        id="sram_memory_alignment"
        name="SRAM Memory Alignment"
        group="Memory Configuration"
        default="`${memoryAlignment(&quot;SRAM&quot;)}`"
        visible="false"
        editable="false"
        desc="Alignment/erase size of SRAM memory in decimal" />
    
    <ParamString
        id="sram_memory_view_maps"
        name="SRAM Memory View Maps"
        group="Memory Configuration"
        default="`${memoryViewMaps(&quot;SRAM&quot;, &quot;CORE_NAME_CM33_0_S&quot;)}`"
        visible="false"
        editable="false"
        desc="View maps for SRAM memory" />
    
    <ParamString
        id="sram_memory_ns_base_address"
        name="SRAM Memory NS Base Address"
        group="Memory Configuration"
        default="`${memoryOffsetToAddress(&quot;CORE_NAME_CM33_0_S&quot;, sram_memory_view_maps ne &quot;&quot; ? splitAt(sram_memory_view_maps, 0) : &quot;&quot;, &quot;SRAM&quot;, 0)}`"
        visible="false"
        editable="false"
        desc="NS base address of SRAM memory in decimal" />
    
    <ParamString
        id="sram_memory_s_base_address"
        name="SRAM Memory S Base Address"
        group="Memory Configuration"
        default="`${sram_memory_ns_base_address + 268435456}`"
        visible="false"
        editable="false"
        desc="S base address of SRAM memory (NS + 268435456) in decimal" />

    <!-- RRAM Memory Properties for flash_devices -->
    <ParamString
        id="rram_memory_size"
        name="RRAM Memory Size"
        group="Memory Configuration"
        default="`${memorySize(&quot;RRAM&quot;)}`"
        visible="false"
        editable="false"
        desc="Size of RRAM memory in decimal" />
    
    <ParamString
        id="rram_memory_alignment"
        name="RRAM Memory Alignment"
        group="Memory Configuration"
        default="`${memoryAlignment(&quot;RRAM&quot;)}`"
        visible="false"
        editable="false"
        desc="Alignment/erase size of RRAM memory in decimal" />
    
    <ParamString
        id="rram_memory_view_maps"
        name="RRAM Memory View Maps"
        group="Memory Configuration"
        default="`${memoryViewMaps(&quot;RRAM&quot;, &quot;CORE_NAME_CM33_0_S&quot;)}`"
        visible="false"
        editable="false"
        desc="View maps for RRAM memory" />
    
    <ParamString
        id="rram_memory_base_address"
        name="RRAM Memory Base Address"
        group="Memory Configuration"
        default="`${memoryOffsetToAddress(&quot;CORE_NAME_CM33_0_S&quot;, rram_memory_view_maps ne &quot;&quot; ? splitAt(rram_memory_view_maps, 0) : &quot;&quot;, &quot;RRAM&quot;, 0)}`"
        visible="false"
        editable="false"
        desc="Base address of RRAM memory in decimal" />

    <!-- Memory Region Analysis -->
    <ParamString
        id="all_region_memories"
        name="Region Memories"
        group="Memory Information"
        default="`${getRegionPhysMemIds()}`"
        visible="false"
        editable="false"
        desc="All memory IDs used by regions" />
    
    <ParamString
        id="all_region_offsets"
        name="Region Offsets"
        group="Memory Information"
        default="`${getRegionOffsets()}`"
        visible="false"
        editable="false"
        desc="All region offsets" />
    
    <ParamString
        id="all_region_sizes"
        name="Region Sizes"
        group="Memory Information"
        default="`${getRegionSizes()}`"
        visible="false"
        editable="false"
        desc="All region sizes" />

    <!-- Manual Memory Configuration Section -->

    <ParamString                                                                                        
        id="memIdList"                                                                                    
        default='`${memoryIds()}`' />                                                                     
    <ParamString                                                                                        
        id="memCount"                                                                                     
        default='`${splitCount(memIdList)}`' />                                                           

    <!-- Manual Memory Configuration for Applications -->
    <Repeat count="$MAX_APPLICATIONS">
      <!-- Manual Primary Slot Configuration -->
      <ParamChoice
        id="app$idx_manual_primary_memory"
        name="Primary slot memory"
        group="Application $idx Configuration/Primary Slot Configuration"
        default="RRAM"
        editable="true"
        visible="`${$idx == 0 ? true : $idx &lt; image_count}`"
        desc="Select memory type for application $idx primary slot">
        <Entry                                                                                            
            value='`${$idx &lt; memCount ? splitAt(memIdList, $idx) : &quot;$idx&quot;}`'                   
            name='`${$idx &lt; memCount ? memoryDisplayName(splitAt(memIdList, $idx)) : &quot;$idx&quot;}`' 
            visible='`${$idx{1} &lt; image_count ? $idx &lt; memCount : false}`'                                                               
            repeatCount="$MAX_MEMORIES" />                                                                             
      </ParamChoice>

      <ParamString 
            id="app$idx_manual_primary_description"   
            name="Slot $idx Description" 
            group="Application $idx Configuration/Primary Slot" 
            visible="false"
            editable="false" 
            default="Defintion of primary slot for application $idx"
            desc="Description of primary slot for application $idx" />

      <ParamString 
            id="app$idx_manual_primary_name"   
            name="app_$idx_primary_slot" 
            group="Application $idx Configuration/Primary Slot" 
            visible="false"
            editable="false" 
            default="app_$idx_primary_slot"
            desc="Description of primary slot for application $idx" />

      <ParamString
        id="app$idx_manual_primary_offset"
        name="Primary slot offset"
        group="Application $idx Configuration/Primary Slot Configuration"
        default="0x00000000"
        editable="true"
        visible="`${$idx == 0 ? true : $idx &lt; image_count}`"
        desc="Hex offset within selected memory for application $idx primary slot" />

      <ParamString
        id="app$idx_manual_primary_size"
        name="Primary slot size"
        group="Application $idx Configuration/Primary Slot Configuration"
        default="0x00100000"
        editable="true"
        visible="`${$idx == 0 ? true : $idx &lt; image_count}`"
        desc="Hex size of application $idx primary slot" />

      <!-- Secure Access Configuration -->
      <ParamBool
        id="app$idx_secure_access"
        name="Secure Access"
        group="Application $idx Configuration/Primary Slot Configuration"
        default="false"
        editable="true"
        visible="`${$idx == 0 ? true : $idx &lt; image_count}`"
        desc="Enable secure access for application $idx" />
    </Repeat>

    <!-- Image encryption -->
    <ParamChoice
        id="image_encryption"
        name="Image encryption"
        group="MCUBoot config"
        default="off"
        editable="true"
        visible='`${validate_boot_slot eq true &amp;&amp; validate_upgrade_slot eq true}`'
        desc="Selects the image encryption mode">
      <Entry name="Off" value="off" visible="true" />
      <Entry name="XIP encryption single AES key (+ ECIES P256)" value="xip_single_key" visible="`${upgrade_mode eq &quot;overwrite&quot;}`" />
      <Entry name="XIP encryption multi AES keys (+ ECIES P256)" value="xip_multi_keys" visible="false" />
      <Entry name="SE RT encryption" value="se_rt_encryption" visible="false" />
    </ParamChoice>
    
    <ParamBool
        id="image_encryption_enabled"
        name="Image encryption enabled"
        group="Application $idx Configuration/Primary Slot Configuration"
        default='`${validate_boot_slot eq true &amp;&amp; validate_upgrade_slot eq true &amp;&amp; image_encryption ne "off"}`'
        editable="false"
        visible="false"
        desc="Image encryption enabled" />

    <!-- Pivate Key encryption key address (visible when XIP encryption is selected) -->
    <ParamString
        id="key_encryption_key_address"
        name="Private Key Encryption Key(KEK) address"
        group="MCUBoot config"
        default="0x3203A000"
        editable="true"
        visible='`${image_encryption_enabled eq true &amp;&amp;  (image_encryption eq "xip_single_key" || image_encryption eq "xip_multi_keys")}`'
        desc="Hex address of pivate EC256 key encryption key (KEK) in the device. Key image must programmed separately to the memorory " />
        
    <!-- Public Key encryption key address (visible when XIP encryption is selected) -->
    <ParamString
        id="key_encryption_key_path"
        name="Public Key Encryption Key(KEK) path"
        group="MCUBoot config"
        default="../../../../keys/enc-ec256-pub.pem"
        editable="true"
        visible='`${image_encryption_enabled eq true &amp;&amp;  (image_encryption eq "xip_single_key" || image_encryption eq "xip_multi_keys")}`'
        desc="Path to the public EC256 key encryption key (KEK) file. Path is relative to the SignerCombiner JSON file location." />
        
   <!-- AES128 cipher key -->
    <ParamString
        id="data_encryption_key_path"
        name="AES128 Data Encryption Key(DEK) path"
        group="MCUBoot config"
        default="../../../../keys/aes128_key.bin"
        editable="true"
        visible='`${image_encryption_enabled eq true &amp;&amp;  (image_encryption eq "xip_single_key" || image_encryption eq "xip_multi_keys")}`'
        desc="Path to the AES128 Data Encryption Key(DEK) file. Path is relative to the SignerCombiner JSON file location." />
        
   <!-- Nonce output file -->
    <ParamString
        id="nonce_output_file_path"
        name="NONCE output file path"
        group="MCUBoot config"
        default="../../../../keys/nonce.bin"
        editable="true"
        visible='`${image_encryption_enabled eq true &amp;&amp;  (image_encryption eq "xip_single_key" || image_encryption eq "xip_multi_keys")}`'
        desc="During the signing of the first image the random NONCE is generated. This NONCE value must be saved and then be used for encrypting of other images. Path is relative to the SignerCombiner JSON file location." />

    <!-- Stage SE RAM App -->
    <ParamBool
        id="stage_se_ram_app"
        name="Stage SE RAM App"
        group="MCUBoot config"
        default="false"
        editable="true"
        visible="true"
        desc="Enables staging SE RAM application" />

    <!-- SE RAM App staging address (visible when Stage SE RAM App is selected) -->
    <ParamString
        id="se_ram_app_staging_address"
        name="SE RAM App staging address"
        group="MCUBoot config/SE RAM App Staging"
        default="0x70400000"
        editable="true"
        visible="`${stage_se_ram_app eq true}`"
        desc="Hex address for SE RAM App staging" />

    <!-- SE RAM App staging size (visible when Stage SE RAM App is selected) -->
    <ParamString
        id="se_ram_app_staging_size"
        name="SE RAM App staging size"
        group="MCUBoot config/SE RAM App Staging"
        default="0x40000"
        editable="true"
        visible="`${stage_se_ram_app eq true}`"
        desc="Hex size for SE RAM App staging" />

    <!-- Watchdog -->
    <ParamBool
        id="watchdog"
        name="Watchdog"
        group="MCUBoot config"
        default="false"
        editable="true"
        visible="true"
        desc="Enables watchdog monitoring during the boot process" />

    <!-- MbedTLS Configuration -->

    <ParamString
        id="mbedtls_crypto_config_file"
        name="Mbedtls crypto configuration file"
        group="mbedTLS Configuration"
        default="$(SEARCH_ifx-mcuboot-pse84)/boot/platforms/COMPONENT_PSE84/mcuboot_config/ifx_mbedtls_crypto_config.h"
        editable="true"
        visible="true"
        desc="Path to the mbedTLS crypto configuration file" />
    
    <ParamString
        id="mbedtls_psa_crypto_config_file"
        name="Mbedtls PSA crypto configuration file"
        group="mbedTLS Configuration"
        default="$(SEARCH_ifx-mcuboot-pse84)/boot/platforms/COMPONENT_PSE84/mcuboot_config/ifx_psa_crypto_config.h"
        editable="true"
        visible="true"
        desc="Path to the mbedTLS PSA crypto configuration file" />

    <ParamString
        id="mbedtls_target_config_file"
        name="Mbedtls target configuration file"
        group="mbedTLS Configuration"
        default="$(SEARCH_ifx-mcuboot-pse84)/boot/platforms/COMPONENT_PSE84/mcuboot_config/ifx_mbedtls_target_config.h"
        editable="true"
        visible="true"
        desc="Path to the mbedTLS target configuration file" />

    <!-- ########################### -->
    <ParamString
        id="parentLocation"
        default="`${INST_LOC}`"
        visible="false"
        editable="false"
        group="Bootloader Application Configuration"
        name=""
        desc="" />
    <ParamBool
        id="bootloader_nvm_its_MEMORY_PLACED"
        name="Bootloader NVM Region"
        group="Bootloader Application Configuration"
        default="true"
        visible="true"
        editable="true"
        desc="Enables bootloader NVM memory region" />

    <ParamBool
        id="bootloader_sram_region_MEMORY_PLACED"
        name="Bootloader SRAM Data Region"
        group="Bootloader Application Configuration"
        default="false"
        visible="false"
        editable="true"
        desc="Enables bootloader SRAM data memory region" />
    <ParamBool
        id="bootloader_sram_code_region_MEMORY_PLACED"
        name="Bootloader SRAM Code Region"
        group="Bootloader Application Configuration"
        default="false"
        visible="false"
        editable="true"
        desc="Enables bootloader SRAM code memory region" />

    <ParamBool
        id="bootloader_signature_enable"
        name="Enable Bootloader Signing"
        group="Bootloader Application Configuration"
        default="false"
        visible="true"
        editable="true"
        desc="Enable Bootloader Signig and Bootloader HW security counter. Signature and security counter are required for bootloader image if secure_boot = true in the Extended Boot policy" />
        
    <ParamString
        id="bootloader_hw_rollback_value"
        name="HW security counter value"
        group="Bootloader Application Configuration"
        default="1"
        editable="true"
        visible='`${bootloader_signature_enable}`'
        desc="Security counter value for the bootloader image, min value = 1, max value = 63. Security counter number is always '0' for the bootloader image" />

    <ParamString
        id="bootloader_signature_priv_key_path"
        name="Signing private key path"
        group="Bootloader Application Configuration"
        default="../../../../keys/oem_private_key_0.pem"
        editable="true"
        visible='`${bootloader_signature_enable}`'
        desc="Path to the private key used for signing of the bootloader image. The bootloader must always be signed by OEM RoT key(key ID is always equal '1'). Path is relative to the SignerCombiner JSON file location." />

    <!-- Swap Mode Memory Region Selectors -->
    <ParamPersonality
        id="swap_status_region"
        name="Swap Status Region"
        group="Bootloader Application Configuration"
        visible="`${upgrade_mode eq &quot;swap&quot;}`"
        editable="true"
        blockType="vres\.memory_region_data"
        canBeEmpty="true"
        multiSelect="false"
        displayMemberKey="regionId"
        desc="Select existing memory region for swap status area (required for swap mode)" />

    <ParamString
        id="swap_status_region_location"
        name="Swap status region location"
        group="Bootloader Application Configuration"
        visible="false"
        editable="false"
        default="`${swap_status_region}`"
        desc="Location of memory region for swap status area" />

    <ParamPersonality
        id="scratch_region"
        name="Scratch Region"
        group="Bootloader Application Configuration"
        visible="`${upgrade_mode eq &quot;swap&quot;}`"
        editable="true"
        blockType="vres\.memory_region_data"
        canBeEmpty="true"
        multiSelect="false"
        displayMemberKey="regionId"
        desc="Select existing memory region for scratch area (required for swap mode)" />

    <ParamString
        id="scratch_region_location"
        name="Scratch region location"
        group="Bootloader Application Configuration"
        visible="false"
        editable="false"
        default="`${scratch_region}`"
        desc="Location of memory region for scratch area" />

    <!-- Dynamic Base Address Parameters for Bootloader, Scratch, and Swap Status -->
    <ParamString
        id="bootloader_memory_id"
        name="Bootloader memory ID"
        group="Bootloader Application Configuration"
        default='`${bootloader_nvm_its_MEMORY_PLACED eq true ? getExposedMember(findMemoryRegionByGuid("7F3E9B2A-5C8D-4E1F-9A6B-3D7C2E8F1A4B"), "memoryId") : "RRAM"}`'
        editable="false"
        visible="false"
        desc="Memory ID of the bootloader region" />
    
    <ParamString
        id="bootloader_memory_view_maps"
        name="Bootloader memory view maps"
        group="Bootloader Application Configuration"
        default='`${bootloader_memory_id ne &quot;&quot; ? memoryViewMaps(bootloader_memory_id, &quot;CORE_NAME_CM33_0_S&quot;) : &quot;&quot;}`'
        editable="false"
        visible="false"
        desc="Available view maps for bootloader memory" />
    
    <ParamString
        id="bootloader_base_address_dynamic"
        name="Bootloader base address (Dynamic)"
        group="Bootloader Application Configuration"
        default='`${toHex(memoryOffsetToAddress(&quot;CORE_NAME_CM33_0_S&quot;, bootloader_memory_view_maps ne &quot;&quot; ? splitAt(bootloader_memory_view_maps, 0) : &quot;&quot;, bootloader_memory_id, 0))}`'
        editable="false"
        visible="false"
        desc="Dynamically calculated base address using Memory Context API for bootloader" />

    <ParamString
        id="scratch_memory_id"
        name="Scratch memory ID"
        group="Bootloader Application Configuration"
        default='`${scratch_region ne "" ? getExposedMember(getBlockFromInstance(scratch_region), "memoryId") : "RRAM"}`'
        editable="false"
        visible="false"
        desc="Memory ID of the scratch region" />
    
    <ParamString
        id="scratch_memory_view_maps"
        name="Scratch memory view maps"
        group="Bootloader Application Configuration"
        default='`${scratch_memory_id ne &quot;&quot; ? memoryViewMaps(scratch_memory_id, &quot;CORE_NAME_CM33_0_S&quot;) : &quot;&quot;}`'
        editable="false"
        visible="false"
        desc="Available view maps for scratch memory" />
    
    <ParamString
        id="scratch_base_address_dynamic"
        name="Scratch base address (Dynamic)"
        group="Bootloader Application Configuration"
        default='`${toHex(memoryOffsetToAddress(&quot;CORE_NAME_CM33_0_S&quot;, scratch_memory_view_maps ne &quot;&quot; ? splitAt(scratch_memory_view_maps, 0) : &quot;&quot;, scratch_memory_id, 0))}`'
        editable="false"
        visible="false"
        desc="Dynamically calculated base address using Memory Context API for scratch region" />

    <ParamString
        id="swap_status_memory_id"
        name="Swap status memory ID"
        group="Bootloader Application Configuration"
        default='`${swap_status_region ne "" ? getExposedMember(getBlockFromInstance(swap_status_region), "memoryId") : "RRAM"}`'
        editable="false"
        visible="false"
        desc="Memory ID of the swap status region" />
    
    <ParamString
        id="swap_status_memory_view_maps"
        name="Swap status memory view maps"
        group="Bootloader Application Configuration"
        default='`${swap_status_memory_id ne &quot;&quot; ? memoryViewMaps(swap_status_memory_id, &quot;CORE_NAME_CM33_0_S&quot;) : &quot;&quot;}`'
        editable="false"
        visible="false"
        desc="Available view maps for swap status memory" />
    
    <ParamString
        id="swap_status_base_address_dynamic"
        name="Swap status base address (Dynamic)"
        group="Bootloader Application Configuration"
        default='`${toHex(memoryOffsetToAddress(&quot;CORE_NAME_CM33_0_S&quot;, swap_status_memory_view_maps ne &quot;&quot; ? splitAt(swap_status_memory_view_maps, 0) : &quot;&quot;, swap_status_memory_id, 0))}`'
        editable="false"
        visible="false"
        desc="Dynamically calculated base address using Memory Context API for swap status region" />

    <ParamPlacement
        templateId="reserved_memory_region_its"
        name="Placement"
        group="Bootloader Application Configuration/BOOTLOADER_NVM"
        visible="false"
        desc="" />
    <ParamString
        templateId="reserved_memory_region_its"
        id="location"
        default="`${INST_LOC}`"
        visible="false"
        editable="false"
        group="Bootloader Application Configuration/BOOTLOADER_NVM"
        name=""
        desc="" />
    <ParamString
        templateId="reserved_memory_region_its"
        id="parentLoc"
        default="`${getParamValue(&quot;edgeprotect_bootloader_cfg&quot;, &quot;parentLocation&quot;)}`"
        visible="false"
        editable="false"
        group="Bootloader Application Configuration/BOOTLOADER_NVM"
        name=""
        desc="" />
    <ParamString
        templateId="reserved_memory_region_its"
        id="guid"
        default="7F3E9B2A-5C8D-4E1F-9A6B-3D7C2E8F1A4B"
        visible="false"
        editable="false"
        group="Bootloader Application Configuration/BOOTLOADER_NVM"
        name="GUID"
        desc="" />
    <ParamBool
        templateId="reserved_memory_region_its"
        id="is_name_user_editable"
        default="false"
        editable="false"
        visible="false"
        group="Bootloader Application Configuration/BOOTLOADER_NVM"
        name=""
        desc="" />
    <ParamString
        templateId="reserved_memory_region_its"
        id="name"
        name="Region Id"
        default="bootloader_nvm"
        visible="false"
        editable="false"
        group="Bootloader Application Configuration/BOOTLOADER_NVM"
        desc="" />
    <ParamBool
        templateId="reserved_memory_region_its"
        id="is_size_user_editable"
        default="true"
        editable="false"
        visible="false"
        group="Bootloader Application Configuration/BOOTLOADER_NVM"
        name=""
        desc="" />
    <ParamString
        templateId="reserved_memory_region_its"
        id="size"
        name="Default Size"
        default="0x00028000"
        visible="false"
        editable="true"
        group="Bootloader Application Configuration/BOOTLOADER_NVM"
        desc="" />
    <ParamBool
        templateId="reserved_memory_region_its"
        id="is_offset_user_editable"
        default="true"
        editable="false"
        visible="false"
        group="Bootloader Application Configuration/BOOTLOADER_NVM"
        name=""
        desc="" />
    <ParamString
        templateId="reserved_memory_region_its"
        id="offset"
        name="Default Offset"
        default="0x00011000"
        visible="false"
        editable="true"
        group="Bootloader Application Configuration/BOOTLOADER_NVM"
        desc="" />
    <ParamBool
        templateId="reserved_memory_region_its"
        id="is_cores_user_editable"
        default="true"
        editable="false"
        visible="false"
        group="Bootloader Application Configuration/BOOTLOADER_NVM"
        name=""
        desc="" />
    <ParamString
        templateId="reserved_memory_region_its"
        id="cores"
        name="Default Core(s)"
        default="CORE_NAME_CM33_0_S"
        visible="false"
        editable="true"
        group="Bootloader Application Configuration/BOOTLOADER_NVM"
        desc="" />
    <ParamBool
        templateId="reserved_memory_region_its"
        id="is_memory_user_editable"
        default="true"
        editable="false"
        visible="false"
        group="Bootloader Application Configuration/BOOTLOADER_NVM"
        name=""
        desc="" />
    <ParamChoice
        templateId="reserved_memory_region_its"
        id="memory"
        name="Default Memory"
        default="RRAM"
        visible="false"
        editable="true"
        group="Bootloader Application Configuration/BOOTLOADER_NVM"
        desc="Memory type for the bootloader NVM region">
      <Entry name="RRAM" value="RRAM" visible="true" />
      <Entry name="Serial Memory Interface" value="SMIF0MEM1" visible="true" />
    </ParamChoice>
    <ParamString
        templateId="reserved_memory_region_its"
        id="required_memory_capabilities"
        name="Required Capabilities"
        default="Readable"
        visible="false"
        editable="false"
        group="Bootloader Application Configuration/BOOTLOADER_NVM"
        desc="" />
    <ParamString
        templateId="reserved_memory_region_its"
        id="is_protection_user_editable"
        name="Protection Editable"
        default="false"
        visible="false"
        editable="false"
        group="Bootloader Application Configuration/BOOTLOADER_NVM"
        desc="" />
    <ParamString
        templateId="reserved_memory_region_its"
        id="protection"
        name="protection"
        default='`${getInstanceFromBlock(getBlockFromAlias("M33S"))}`'
        visible="false"
        editable="false"
        group="Bootloader Application Configuration/BOOTLOADER_NVM"
        desc="" />
    <!-- ########################### -->

    <!-- Bootloader SRAM Data Region -->
    <ParamPlacement
        templateId="reserved_memory_region_bootloader"
        name="Placement"
        group="Bootloader Application Configuration/BOOTLOADER_SRAM"
        visible="`${getParamValue(&quot;edgeprotect_bootloader_cfg&quot;,&quot;bootloader_sram_region_MEMORY_PLACED&quot;)}`"
        desc="Bootloader SRAM data region placement" />
    <ParamString
        templateId="reserved_memory_region_bootloader"
        id="location"
        default="`${INST_LOC}`"
        visible="false"
        editable="false"
        group="Bootloader Application Configuration/BOOTLOADER_SRAM"
        name=""
        desc="" />
    <ParamString
        templateId="reserved_memory_region_bootloader"
        id="parentLoc"
        default="`${getParamValue(&quot;edgeprotect_bootloader_cfg&quot;, &quot;parentLocation&quot;)}`"
        visible="false"
        editable="false"
        group="Bootloader Application Configuration/BOOTLOADER_SRAM"
        name=""
        desc="" />
    <ParamString
        templateId="reserved_memory_region_bootloader"
        id="guid"
        default="A9F4C7E2-6B1D-4A3E-8F5C-2D9A7B4E6C8F"
        visible="false"
        editable="false"
        group="Bootloader Application Configuration/BOOTLOADER_SRAM"
        name="GUID"
        desc="" />
    <ParamBool
        templateId="reserved_memory_region_bootloader"
        id="is_name_user_editable"
        default="false"
        editable="false"
        visible="false"
        group="Bootloader Application Configuration/BOOTLOADER_SRAM"
        name=""
        desc="" />
    <ParamString
        templateId="reserved_memory_region_bootloader"
        id="name"
        name="Region Id"
        default="bootloader_sram"
        visible="false"
        editable="false"
        group="Bootloader Application Configuration/BOOTLOADER_SRAM"
        desc="" />
    <ParamBool
        templateId="reserved_memory_region_bootloader"
        id="is_size_user_editable"
        default="true"
        editable="false"
        visible="false"
        group="Bootloader Application Configuration/BOOTLOADER_SRAM"
        name=""
        desc="" />
    <ParamString
        templateId="reserved_memory_region_bootloader"
        id="size"
        name="Default Size"
        default="0x00001000"
        visible="`${getParamValue(&quot;edgeprotect_bootloader_cfg&quot;,&quot;bootloader_sram_region_MEMORY_PLACED&quot;)}`"
        editable="true"
        group="Bootloader Application Configuration/BOOTLOADER_SRAM"
        desc="Size of bootloader SRAM data region" />
    <ParamBool
        templateId="reserved_memory_region_bootloader"
        id="is_offset_user_editable"
        default="true"
        editable="false"
        visible="false"
        group="Bootloader Application Configuration/BOOTLOADER_SRAM"
        name=""
        desc="" />
    <ParamString
        templateId="reserved_memory_region_bootloader"
        id="offset"
        name="Default Offset"
        default="0x00000000"
        visible="false"
        editable="true"
        group="Bootloader Application Configuration/BOOTLOADER_SRAM"
        desc="" />
    <ParamBool
        templateId="reserved_memory_region_bootloader"
        id="is_cores_user_editable"
        default="true"
        editable="false"
        visible="false"
        group="Bootloader Application Configuration/BOOTLOADER_SRAM"
        name=""
        desc="" />
    <ParamString
        templateId="reserved_memory_region_bootloader"
        id="cores"
        name="Default Core(s)"
        default="CORE_NAME_CM33_0_S"
        visible="`${getParamValue(&quot;edgeprotect_bootloader_cfg&quot;,&quot;bootloader_sram_region_MEMORY_PLACED&quot;)}`"
        editable="true"
        group="Bootloader Application Configuration/BOOTLOADER_SRAM"
        desc="Cores that can access this region" />
    <ParamBool
        templateId="reserved_memory_region_bootloader"
        id="is_memory_user_editable"
        default="false"
        editable="false"
        visible="false"
        group="Bootloader Application Configuration/BOOTLOADER_SRAM"
        name=""
        desc="" />
    <ParamString
        templateId="reserved_memory_region_bootloader"
        id="memory"
        name="Default Memory"
        default="SRAM"
        visible="`${getParamValue(&quot;edgeprotect_bootloader_cfg&quot;,&quot;bootloader_sram_region_MEMORY_PLACED&quot;)}`"
        editable="false"
        group="Bootloader Application Configuration/BOOTLOADER_SRAM"
        desc="Memory type" />
    <ParamString
        templateId="reserved_memory_region_bootloader"
        id="required_memory_capabilities"
        name="Required Capabilities"
        default="Readable,Writable"
        visible="false"
        editable="false"
        group="Bootloader Application Configuration/BOOTLOADER_SRAM"
        desc="" />
    <ParamString
        templateId="reserved_memory_region_bootloader"
        id="is_protection_user_editable"
        name="Protection Editable"
        default="false"
        visible="false"
        editable="false"
        group="Bootloader Application Configuration/BOOTLOADER_SRAM"
        desc="" />
    <ParamString
        templateId="reserved_memory_region_bootloader"
        id="protection"
        name="protection"
        default='`${getInstanceFromBlock(getBlockFromAlias("M33S"))}`'
        visible="false"
        editable="false"
        group="Bootloader Application Configuration/BOOTLOADER_SRAM"
        desc="" />
    <!-- ########################### -->

    <!-- Bootloader SRAM Code Region -->
    <ParamPlacement templateId="reserved_memory_region_bootloader_code" name="Placement_code" group="Bootloader Application Configuration/BOOTLOADER_SRAM_CODE" visible="`${getParamValue(&quot;edgeprotect_bootloader_cfg&quot;,&quot;bootloader_sram_code_region_MEMORY_PLACED&quot;)}`" desc="Bootloader SRAM code region placement" />
    <ParamString templateId="reserved_memory_region_bootloader_code" id="location" default="`${INST_LOC}`" visible="false" editable="false" group="Bootloader Application Configuration/BOOTLOADER_SRAM_CODE" name="" desc="" />
    <ParamString templateId="reserved_memory_region_bootloader_code" id="parentLoc" default="`${getParamValue(&quot;edgeprotect_bootloader_cfg&quot;, &quot;parentLocation&quot;)}`" visible="false" editable="false" group="Bootloader Application Configuration/BOOTLOADER_SRAM_CODE" name="" desc="" />
    <ParamString templateId="reserved_memory_region_bootloader_code" id="guid" default="E1B8F5A3-9C4D-4F2E-7A6B-8D3C5E9F2A7B" visible="false" editable="false" group="Bootloader Application Configuration/BOOTLOADER_SRAM_CODE" name="GUID" desc="" />
    <ParamBool templateId="reserved_memory_region_bootloader_code" id="is_name_user_editable" default="false" editable="false" visible="false" group="Bootloader Application Configuration/BOOTLOADER_SRAM_CODE" name="" desc="" />
    <ParamString templateId="reserved_memory_region_bootloader_code" id="name" name="Region Id" default="bootloader_sram_code" visible="false" editable="false" group="Bootloader Application Configuration/BOOTLOADER_SRAM_CODE" desc="" />
    <ParamBool templateId="reserved_memory_region_bootloader_code" id="is_size_user_editable" default="true" editable="false" visible="false" group="Bootloader Application Configuration/BOOTLOADER_SRAM_CODE" name="" desc="" />
    <ParamString templateId="reserved_memory_region_bootloader_code" id="size" name="Default Size" default="0x00001000" visible="`${getParamValue(&quot;edgeprotect_bootloader_cfg&quot;,&quot;bootloader_sram_code_region_MEMORY_PLACED&quot;)}`" editable="true" group="Bootloader Application Configuration/BOOTLOADER_SRAM_CODE" desc="Size of bootloader SRAM code region" />
    <ParamBool templateId="reserved_memory_region_bootloader_code" id="is_offset_user_editable" default="true" editable="false" visible="false" group="Bootloader Application Configuration/BOOTLOADER_SRAM_CODE" name="" desc="" />
    <ParamString templateId="reserved_memory_region_bootloader_code" id="offset" name="Default Offset" default="0x00000000" visible="false" editable="true" group="Bootloader Application Configuration/BOOTLOADER_SRAM_CODE" desc="" />
    <ParamBool templateId="reserved_memory_region_bootloader_code" id="is_cores_user_editable" default="true" editable="false" visible="false" group="Bootloader Application Configuration/BOOTLOADER_SRAM_CODE" name="" desc="" />
    <ParamString templateId="reserved_memory_region_bootloader_code" id="cores" name="Default Core(s)" default="CORE_NAME_CM33_0_S" visible="`${getParamValue(&quot;edgeprotect_bootloader_cfg&quot;,&quot;bootloader_sram_code_region_MEMORY_PLACED&quot;)}`" editable="true" group="Bootloader Application Configuration/BOOTLOADER_SRAM_CODE" desc="Cores that can access this region" />
    <ParamBool templateId="reserved_memory_region_bootloader_code" id="is_memory_user_editable" default="false" editable="false" visible="false" group="Bootloader Application Configuration/BOOTLOADER_SRAM_CODE" name="" desc="" />
    <ParamString templateId="reserved_memory_region_bootloader_code" id="memory" name="Default Memory" default="SRAM" visible="`${getParamValue(&quot;edgeprotect_bootloader_cfg&quot;,&quot;bootloader_sram_code_region_MEMORY_PLACED&quot;)}`" editable="false" group="Bootloader Application Configuration/BOOTLOADER_SRAM_CODE" desc="Memory type" />
    <ParamString templateId="reserved_memory_region_bootloader_code" id="required_memory_capabilities" name="Required Capabilities" default="Readable,Writable,Executable" visible="false" editable="false" group="Bootloader Application Configuration/BOOTLOADER_SRAM_CODE" desc="" />
    <ParamString templateId="reserved_memory_region_bootloader_code" id="is_protection_user_editable" name="Protection Editable" default="false" visible="false" editable="false" group="Bootloader Application Configuration/BOOTLOADER_SRAM_CODE" desc="" />
    <ParamString templateId="reserved_memory_region_bootloader_code" id="protection" name="protection" default='`${getInstanceFromBlock(getBlockFromAlias("M33S"))}`' visible="false" editable="false" group="Bootloader Application Configuration/BOOTLOADER_SRAM_CODE" desc="" />
    <!-- ########################### -->
  </Parameters>

  <Variables>
    <!-- Debug CMSE attribute access for secondary slot regions -->
    <Variable id='debug_secondary_region_count' value='`${image_count}`' />
    
    <!-- Application 0 Variables -->
    <Variable id='app0_secondary_region_ref' value='`${app0_secondary_region}`' />
    <Variable id='app0_secondary_domain_ref' value='`${app0_secondary_region ne "" ? getExposedMember(getBlockFromInstance(app0_secondary_region), "domain") : ""}`' />
    <Variable id='app0_secondary_cmse_attr' value='`${app0_secondary_domain_ref ne "" ? getExposedMember(getBlockFromInstance(app0_secondary_domain_ref), "cmseAttribute") : "NO_DOMAIN"}`' />
    <Variable id='app0_secondary_memid' value='`${app0_secondary_region ne "" ? getExposedMember(getBlockFromInstance(app0_secondary_region), "memoryId") : ""}`' />
    <Variable id='app0_secondary_devtype' value='`${app0_secondary_memid eq "SMIF0MEM0" || app0_secondary_memid eq "SMIF0MEM1" || app0_secondary_memid eq "SMIF0MEM2" || app0_secondary_memid eq "SMIF0MEM3" || app0_secondary_memid eq "SMIF1MEM0" || app0_secondary_memid eq "SMIF1MEM1" || app0_secondary_memid eq "SMIF1MEM2" || app0_secondary_memid eq "SMIF1MEM3" ? (app0_secondary_cmse_attr eq "SECURE" ? "EXTERNAL_S_FLASH" : "EXTERNAL_NS_FLASH") : (app0_secondary_memid eq "RRAM" ? "INTERNAL_RRAM" : "ERROR")}`' />
    <Variable id='app0_secondary_var_offset' value='`${app0_secondary_region ne "" ? getExposedMember(getBlockFromInstance(app0_secondary_region), "offset") : ""}`' />
    <Variable id='app0_secondary_var_size' value='`${app0_secondary_region ne "" ? getExposedMember(getBlockFromInstance(app0_secondary_region), "size") : ""}`' />
    <Variable id='app0_secondary_var_base_addr' value='`${app0_secondary_base_address_dynamic + (app0_secondary_cmse_attr eq "SECURE" ? 268435456 : 0)}`' />
    <Variable id='app0_secondary_var_resultant_addr' value='`${app0_secondary_var_offset ne "" ? toHex(app0_secondary_var_base_addr + app0_secondary_var_offset) : ""}`' />
    <Variable id='app0_secondary_var_erase_val' value='`${app0_secondary_devtype eq "INTERNAL_RRAM" || app0_secondary_memid eq "SRAM" || app0_secondary_memid eq "CM55_ITCM_INTERNAL" || app0_secondary_memid eq "SOCMEM_RAM" ? toHex($ERASE_VAL_INTERNAL_MEMORIES) : toHex($ERASE_VAL_EXTERNAL_FLASH)}`' />
    
    <!-- Application 1 Variables -->
    <Variable id='app1_secondary_region_ref' value='`${app1_secondary_region}`' />
    <Variable id='app1_secondary_domain_ref' value='`${app1_secondary_region ne "" ? getExposedMember(getBlockFromInstance(app1_secondary_region), "domain") : ""}`' />
    <Variable id='app1_secondary_cmse_attr' value='`${app1_secondary_domain_ref ne "" ? getExposedMember(getBlockFromInstance(app1_secondary_domain_ref), "cmseAttribute") : "NO_DOMAIN"}`' />
    <Variable id='app1_secondary_memid' value='`${app1_secondary_region ne "" ? getExposedMember(getBlockFromInstance(app1_secondary_region), "memoryId") : ""}`' />
    <Variable id='app1_secondary_devtype' value='`${app1_secondary_memid eq "SMIF0MEM0" || app1_secondary_memid eq "SMIF0MEM1" || app1_secondary_memid eq "SMIF0MEM2" || app1_secondary_memid eq "SMIF0MEM3" || app1_secondary_memid eq "SMIF1MEM0" || app1_secondary_memid eq "SMIF1MEM1" || app1_secondary_memid eq "SMIF1MEM2" || app1_secondary_memid eq "SMIF1MEM3" ? (app1_secondary_cmse_attr eq "SECURE" ? "EXTERNAL_S_FLASH" : "EXTERNAL_NS_FLASH") : (app1_secondary_memid eq "RRAM" ? "INTERNAL_RRAM" : "ERROR")}`' />
    <Variable id='app1_secondary_var_offset' value='`${app1_secondary_region ne "" ? getExposedMember(getBlockFromInstance(app1_secondary_region), "offset") : ""}`' />
    <Variable id='app1_secondary_var_size' value='`${app1_secondary_region ne "" ? getExposedMember(getBlockFromInstance(app1_secondary_region), "size") : ""}`' />
    <Variable id='app1_secondary_var_base_addr' value='`${app1_secondary_base_address_dynamic + (app1_secondary_cmse_attr eq "SECURE" ? 268435456 : 0)}`' />
    <Variable id='app1_secondary_var_resultant_addr' value='`${app1_secondary_var_offset ne "" ? toHex(app1_secondary_var_base_addr + app1_secondary_var_offset) : ""}`' />
    <Variable id='app1_secondary_var_erase_val' value='`${app1_secondary_devtype eq "INTERNAL_RRAM" || app1_secondary_memid eq "SRAM" || app1_secondary_memid eq "CM55_ITCM_INTERNAL" || app1_secondary_memid eq "SOCMEM_RAM" ? toHex($ERASE_VAL_INTERNAL_MEMORIES) : toHex($ERASE_VAL_EXTERNAL_FLASH)}`' />
    
    <!-- Application 2 Variables -->
    <Variable id='app2_secondary_region_ref' value='`${app2_secondary_region}`' />
    <Variable id='app2_secondary_domain_ref' value='`${app2_secondary_region ne "" ? getExposedMember(getBlockFromInstance(app2_secondary_region), "domain") : ""}`' />
    <Variable id='app2_secondary_cmse_attr' value='`${app2_secondary_domain_ref ne "" ? getExposedMember(getBlockFromInstance(app2_secondary_domain_ref), "cmseAttribute") : "NO_DOMAIN"}`' />
    <Variable id='app2_secondary_memid' value='`${app2_secondary_region ne "" ? getExposedMember(getBlockFromInstance(app2_secondary_region), "memoryId") : ""}`' />
    <Variable id='app2_secondary_devtype' value='`${app2_secondary_memid eq "SMIF0MEM0" || app2_secondary_memid eq "SMIF0MEM1" || app2_secondary_memid eq "SMIF0MEM2" || app2_secondary_memid eq "SMIF0MEM3" || app2_secondary_memid eq "SMIF1MEM0" || app2_secondary_memid eq "SMIF1MEM1" || app2_secondary_memid eq "SMIF1MEM2" || app2_secondary_memid eq "SMIF1MEM3" ? (app2_secondary_cmse_attr eq "SECURE" ? "EXTERNAL_S_FLASH" : "EXTERNAL_NS_FLASH") : (app2_secondary_memid eq "RRAM" ? "INTERNAL_RRAM" : "ERROR")}`' />
    <Variable id='app2_secondary_var_offset' value='`${app2_secondary_region ne "" ? getExposedMember(getBlockFromInstance(app2_secondary_region), "offset") : ""}`' />
    <Variable id='app2_secondary_var_size' value='`${app2_secondary_region ne "" ? getExposedMember(getBlockFromInstance(app2_secondary_region), "size") : ""}`' />
    <Variable id='app2_secondary_var_base_addr' value='`${app2_secondary_base_address_dynamic + (app2_secondary_cmse_attr eq "SECURE" ? 268435456 : 0)}`' />
    <Variable id='app2_secondary_var_resultant_addr' value='`${app2_secondary_var_offset ne "" ? toHex(app2_secondary_var_base_addr + app2_secondary_var_offset) : ""}`' />
    <Variable id='app2_secondary_var_erase_val' value='`${app2_secondary_devtype eq "INTERNAL_RRAM" || app2_secondary_memid eq "SRAM" || app2_secondary_memid eq "CM55_ITCM_INTERNAL" || app2_secondary_memid eq "SOCMEM_RAM" ? toHex($ERASE_VAL_INTERNAL_MEMORIES) : toHex($ERASE_VAL_EXTERNAL_FLASH)}`' />
    
    <!-- Application 3 Variables (extending to MAX_APPLICATIONS) -->
    <Variable id='app3_secondary_region_ref' value='`${app3_secondary_region}`' />
    <Variable id='app3_secondary_domain_ref' value='`${app3_secondary_region ne "" ? getExposedMember(getBlockFromInstance(app3_secondary_region), "domain") : ""}`' />
    <Variable id='app3_secondary_cmse_attr' value='`${app3_secondary_domain_ref ne "" ? getExposedMember(getBlockFromInstance(app3_secondary_domain_ref), "cmseAttribute") : "NO_DOMAIN"}`' />
    <Variable id='app3_secondary_memid' value='`${app3_secondary_region ne "" ? getExposedMember(getBlockFromInstance(app3_secondary_region), "memoryId") : ""}`' />
    <Variable id='app3_secondary_devtype' value='`${app3_secondary_memid eq "SMIF0MEM0" || app3_secondary_memid eq "SMIF0MEM1" || app3_secondary_memid eq "SMIF0MEM2" || app3_secondary_memid eq "SMIF0MEM3" || app3_secondary_memid eq "SMIF1MEM0" || app3_secondary_memid eq "SMIF1MEM1" || app3_secondary_memid eq "SMIF1MEM2" || app3_secondary_memid eq "SMIF1MEM3" ? (app3_secondary_cmse_attr eq "SECURE" ? "EXTERNAL_S_FLASH" : "EXTERNAL_NS_FLASH") : (app3_secondary_memid eq "RRAM" ? "INTERNAL_RRAM" : "ERROR")}`' />
    <Variable id='app3_secondary_var_offset' value='`${app3_secondary_region ne "" ? getExposedMember(getBlockFromInstance(app3_secondary_region), "offset") : ""}`' />
    <Variable id='app3_secondary_var_size' value='`${app3_secondary_region ne "" ? getExposedMember(getBlockFromInstance(app3_secondary_region), "size") : ""}`' />
    <Variable id='app3_secondary_var_base_addr' value='`${app3_secondary_base_address_dynamic + (app3_secondary_cmse_attr eq "SECURE" ? 268435456 : 0)}`' />
    <Variable id='app3_secondary_var_resultant_addr' value='`${app3_secondary_var_offset ne "" ? toHex(app3_secondary_var_base_addr + app3_secondary_var_offset) : ""}`' />
    <Variable id='app3_secondary_var_erase_val' value='`${app3_secondary_devtype eq "INTERNAL_RRAM" || app3_secondary_memid eq "SRAM" || app3_secondary_memid eq "CM55_ITCM_INTERNAL" || app3_secondary_memid eq "SOCMEM_RAM" ? toHex($ERASE_VAL_INTERNAL_MEMORIES) : toHex($ERASE_VAL_EXTERNAL_FLASH)}`' />
    
    <!-- Application 4 Variables (completing MAX_APPLICATIONS) -->
    <Variable id='app4_secondary_region_ref' value='`${app4_secondary_region}`' />
    <Variable id='app4_secondary_domain_ref' value='`${app4_secondary_region ne "" ? getExposedMember(getBlockFromInstance(app4_secondary_region), "domain") : ""}`' />
    <Variable id='app4_secondary_cmse_attr' value='`${app4_secondary_domain_ref ne "" ? getExposedMember(getBlockFromInstance(app4_secondary_domain_ref), "cmseAttribute") : "NO_DOMAIN"}`' />
    <Variable id='app4_secondary_memid' value='`${app4_secondary_region ne "" ? getExposedMember(getBlockFromInstance(app4_secondary_region), "memoryId") : ""}`' />
    <Variable id='app4_secondary_devtype' value='`${app4_secondary_memid eq "SMIF0MEM0" || app4_secondary_memid eq "SMIF0MEM1" || app4_secondary_memid eq "SMIF0MEM2" || app4_secondary_memid eq "SMIF0MEM3" || app4_secondary_memid eq "SMIF1MEM0" || app4_secondary_memid eq "SMIF1MEM1" || app4_secondary_memid eq "SMIF1MEM2" || app4_secondary_memid eq "SMIF1MEM3" ? (app4_secondary_cmse_attr eq "SECURE" ? "EXTERNAL_S_FLASH" : "EXTERNAL_NS_FLASH") : (app4_secondary_memid eq "RRAM" ? "INTERNAL_RRAM" : "ERROR")}`' />
    <Variable id='app4_secondary_var_offset' value='`${app4_secondary_region ne "" ? getExposedMember(getBlockFromInstance(app4_secondary_region), "offset") : ""}`' />
    <Variable id='app4_secondary_var_size' value='`${app4_secondary_region ne "" ? getExposedMember(getBlockFromInstance(app4_secondary_region), "size") : ""}`' />
    <Variable id='app4_secondary_var_base_addr' value='`${app4_secondary_base_address_dynamic + (app4_secondary_cmse_attr eq "SECURE" ? 268435456 : 0)}`' />
    <Variable id='app4_secondary_var_resultant_addr' value='`${app4_secondary_var_offset ne "" ? toHex(app4_secondary_var_base_addr + app4_secondary_var_offset) : ""}`' />
    <Variable id='app4_secondary_var_erase_val' value='`${app4_secondary_devtype eq "INTERNAL_RRAM" || app4_secondary_memid eq "SRAM" || app4_secondary_memid eq "CM55_ITCM_INTERNAL" || app4_secondary_memid eq "SOCMEM_RAM" ? toHex($ERASE_VAL_INTERNAL_MEMORIES) : toHex($ERASE_VAL_EXTERNAL_FLASH)}`' />
    
    <!-- Primary Slot Variables for each application -->
    <Variable id='app0_primary_cmse_attr' value='`${app0_secure_access ? "SECURE" : "NON_SECURE"}`' />
    <Variable id='app0_primary_memid' value='`${app0_manual_primary_memory}`' />
    <Variable id='app0_primary_devtype' value='`${app0_primary_memid eq "SMIF0MEM0" || app0_primary_memid eq "SMIF0MEM1" || app0_primary_memid eq "SMIF0MEM2" || app0_primary_memid eq "SMIF0MEM3" || app0_primary_memid eq "SMIF1MEM0" || app0_primary_memid eq "SMIF1MEM1" || app0_primary_memid eq "SMIF1MEM2" || app0_primary_memid eq "SMIF1MEM3" ? (app0_primary_cmse_attr eq "SECURE" ? "EXTERNAL_S_FLASH" : "EXTERNAL_NS_FLASH") : (app0_primary_memid eq "RRAM" ? "INTERNAL_RRAM" : "ERROR")}`' />
    <Variable id='app0_primary_var_offset' value='`${app0_manual_primary_offset}`' />
    <Variable id='app0_primary_var_size' value='`${app0_manual_primary_size}`' />
    <Variable id='app0_primary_var_base_addr' value='`${(app0_primary_memid eq "RRAM" ? memoryOffsetToAddress("CORE_NAME_CM33_0_S", rram_memory_view_maps ne "" ? splitAt(rram_memory_view_maps, 0) : "", "RRAM", 0) : (app0_primary_memid eq "SRAM" ? memoryOffsetToAddress("CORE_NAME_CM33_0_S", sram_memory_view_maps ne "" ? splitAt(sram_memory_view_maps, 0) : "", "SRAM", 0) : (app0_primary_memid eq "CM55_ITCM_INTERNAL" ? memoryOffsetToAddress("CORE_NAME_CM33_0_S", memoryViewMaps("CM55_ITCM_INTERNAL", "CORE_NAME_CM33_0_S") ne "" ? splitAt(memoryViewMaps("CM55_ITCM_INTERNAL", "CORE_NAME_CM33_0_S"), 0) : "", "CM55_ITCM_INTERNAL", 0) : (app0_primary_memid eq "SOCMEM_RAM" ? memoryOffsetToAddress("CORE_NAME_CM33_0_S", memoryViewMaps("SOCMEM_RAM", "CORE_NAME_CM33_0_S") ne "" ? splitAt(memoryViewMaps("SOCMEM_RAM", "CORE_NAME_CM33_0_S"), 0) : "", "SOCMEM_RAM", 0) : (first_smif_memory ne "" ? memoryOffsetToAddress("CORE_NAME_CM33_0_S", first_smif_memory_view_maps ne "" ? splitAt(first_smif_memory_view_maps, 0) : "", first_smif_memory, 0) : 1610612736))))) + (app0_primary_cmse_attr eq "SECURE" ? 268435456 : 0)}`' />
    <Variable id='app0_primary_var_resultant_addr' value='`${toHex(app0_primary_var_base_addr + app0_manual_primary_offset)}`' />
    <Variable id='app0_primary_var_erase_val' value='`${app0_primary_devtype eq "INTERNAL_RRAM" || app0_primary_memid eq "SRAM" || app0_primary_memid eq "CM55_ITCM_INTERNAL" || app0_primary_memid eq "SOCMEM_RAM" ? toHex($ERASE_VAL_INTERNAL_MEMORIES) : toHex($ERASE_VAL_EXTERNAL_FLASH)}`' />
    
    <Variable id='app1_primary_cmse_attr' value='`${app1_secure_access ? "SECURE" : "NON_SECURE"}`' />
    <Variable id='app1_primary_memid' value='`${app1_manual_primary_memory}`' />
    <Variable id='app1_primary_devtype' value='`${app1_primary_memid eq "SMIF0MEM0" || app1_primary_memid eq "SMIF0MEM1" || app1_primary_memid eq "SMIF0MEM2" || app1_primary_memid eq "SMIF0MEM3" || app1_primary_memid eq "SMIF1MEM0" || app1_primary_memid eq "SMIF1MEM1" || app1_primary_memid eq "SMIF1MEM2" || app1_primary_memid eq "SMIF1MEM3" ? (app1_primary_cmse_attr eq "SECURE" ? "EXTERNAL_S_FLASH" : "EXTERNAL_NS_FLASH") : (app1_primary_memid eq "RRAM" ? "INTERNAL_RRAM" : "ERROR")}`' />
    <Variable id='app1_primary_var_offset' value='`${app1_manual_primary_offset}`' />
    <Variable id='app1_primary_var_size' value='`${app1_manual_primary_size}`' />
    <Variable id='app1_primary_var_base_addr' value='`${(app1_primary_memid eq "RRAM" ? memoryOffsetToAddress("CORE_NAME_CM33_0_S", rram_memory_view_maps ne "" ? splitAt(rram_memory_view_maps, 0) : "", "RRAM", 0) : (app1_primary_memid eq "SRAM" ? memoryOffsetToAddress("CORE_NAME_CM33_0_S", sram_memory_view_maps ne "" ? splitAt(sram_memory_view_maps, 0) : "", "SRAM", 0) : (app1_primary_memid eq "CM55_ITCM_INTERNAL" ? memoryOffsetToAddress("CORE_NAME_CM33_0_S", memoryViewMaps("CM55_ITCM_INTERNAL", "CORE_NAME_CM33_0_S") ne "" ? splitAt(memoryViewMaps("CM55_ITCM_INTERNAL", "CORE_NAME_CM33_0_S"), 0) : "", "CM55_ITCM_INTERNAL", 0) : (app1_primary_memid eq "SOCMEM_RAM" ? memoryOffsetToAddress("CORE_NAME_CM33_0_S", memoryViewMaps("SOCMEM_RAM", "CORE_NAME_CM33_0_S") ne "" ? splitAt(memoryViewMaps("SOCMEM_RAM", "CORE_NAME_CM33_0_S"), 0) : "", "SOCMEM_RAM", 0) : (first_smif_memory ne "" ? memoryOffsetToAddress("CORE_NAME_CM33_0_S", first_smif_memory_view_maps ne "" ? splitAt(first_smif_memory_view_maps, 0) : "", first_smif_memory, 0) : 1610612736))))) + (app1_primary_cmse_attr eq "SECURE" ? 268435456 : 0)}`' />
    <Variable id='app1_primary_var_resultant_addr' value='`${toHex(app1_primary_var_base_addr + app1_manual_primary_offset)}`' />
    <Variable id='app1_primary_var_erase_val' value='`${app1_primary_devtype eq "INTERNAL_RRAM" || app1_primary_memid eq "SRAM" || app1_primary_memid eq "CM55_ITCM_INTERNAL" || app1_primary_memid eq "SOCMEM_RAM" ? toHex($ERASE_VAL_INTERNAL_MEMORIES) : toHex($ERASE_VAL_EXTERNAL_FLASH)}`' />
    
    <Variable id='app2_primary_cmse_attr' value='`${app2_secure_access ? "SECURE" : "NON_SECURE"}`' />
    <Variable id='app2_primary_memid' value='`${app2_manual_primary_memory}`' />
    <Variable id='app2_primary_devtype' value='`${app2_primary_memid eq "SMIF0MEM0" || app2_primary_memid eq "SMIF0MEM1" || app2_primary_memid eq "SMIF0MEM2" || app2_primary_memid eq "SMIF0MEM3" || app2_primary_memid eq "SMIF1MEM0" || app2_primary_memid eq "SMIF1MEM1" || app2_primary_memid eq "SMIF1MEM2" || app2_primary_memid eq "SMIF1MEM3" ? (app2_primary_cmse_attr eq "SECURE" ? "EXTERNAL_S_FLASH" : "EXTERNAL_NS_FLASH") : (app2_primary_memid eq "RRAM" ? "INTERNAL_RRAM" : "ERROR")}`' />
    <Variable id='app2_primary_var_offset' value='`${app2_manual_primary_offset}`' />
    <Variable id='app2_primary_var_size' value='`${app2_manual_primary_size}`' />
    <Variable id='app2_primary_var_base_addr' value='`${(app2_primary_memid eq "RRAM" ? memoryOffsetToAddress("CORE_NAME_CM33_0_S", rram_memory_view_maps ne "" ? splitAt(rram_memory_view_maps, 0) : "", "RRAM", 0) : (app2_primary_memid eq "SRAM" ? memoryOffsetToAddress("CORE_NAME_CM33_0_S", sram_memory_view_maps ne "" ? splitAt(sram_memory_view_maps, 0) : "", "SRAM", 0) : (app2_primary_memid eq "CM55_ITCM_INTERNAL" ? memoryOffsetToAddress("CORE_NAME_CM33_0_S", memoryViewMaps("CM55_ITCM_INTERNAL", "CORE_NAME_CM33_0_S") ne "" ? splitAt(memoryViewMaps("CM55_ITCM_INTERNAL", "CORE_NAME_CM33_0_S"), 0) : "", "CM55_ITCM_INTERNAL", 0) : (app2_primary_memid eq "SOCMEM_RAM" ? memoryOffsetToAddress("CORE_NAME_CM33_0_S", memoryViewMaps("SOCMEM_RAM", "CORE_NAME_CM33_0_S") ne "" ? splitAt(memoryViewMaps("SOCMEM_RAM", "CORE_NAME_CM33_0_S"), 0) : "", "SOCMEM_RAM", 0) : (first_smif_memory ne "" ? memoryOffsetToAddress("CORE_NAME_CM33_0_S", first_smif_memory_view_maps ne "" ? splitAt(first_smif_memory_view_maps, 0) : "", first_smif_memory, 0) : 1610612736))))) + (app2_primary_cmse_attr eq "SECURE" ? 268435456 : 0)}`' />
    <Variable id='app2_primary_var_resultant_addr' value='`${toHex(app2_primary_var_base_addr + app2_manual_primary_offset)}`' />
    <Variable id='app2_primary_var_erase_val' value='`${app2_primary_devtype eq "INTERNAL_RRAM" || app2_primary_memid eq "SRAM" || app2_primary_memid eq "CM55_ITCM_INTERNAL" || app2_primary_memid eq "SOCMEM_RAM" ? toHex($ERASE_VAL_INTERNAL_MEMORIES) : toHex($ERASE_VAL_EXTERNAL_FLASH)}`' />
    
    <Variable id='app3_primary_cmse_attr' value='`${app3_secure_access ? "SECURE" : "NON_SECURE"}`' />
    <Variable id='app3_primary_memid' value='`${app3_manual_primary_memory}`' />
    <Variable id='app3_primary_devtype' value='`${app3_primary_memid eq "SMIF0MEM0" || app3_primary_memid eq "SMIF0MEM1" || app3_primary_memid eq "SMIF0MEM2" || app3_primary_memid eq "SMIF0MEM3" || app3_primary_memid eq "SMIF1MEM0" || app3_primary_memid eq "SMIF1MEM1" || app3_primary_memid eq "SMIF1MEM2" || app3_primary_memid eq "SMIF1MEM3" ? (app3_primary_cmse_attr eq "SECURE" ? "EXTERNAL_S_FLASH" : "EXTERNAL_NS_FLASH") : (app3_primary_memid eq "RRAM" ? "INTERNAL_RRAM" : "ERROR")}`' />
    <Variable id='app3_primary_var_offset' value='`${app3_manual_primary_offset}`' />
    <Variable id='app3_primary_var_size' value='`${app3_manual_primary_size}`' />
    <Variable id='app3_primary_var_base_addr' value='`${(app3_primary_memid eq "RRAM" ? memoryOffsetToAddress("CORE_NAME_CM33_0_S", rram_memory_view_maps ne "" ? splitAt(rram_memory_view_maps, 0) : "", "RRAM", 0) : (app3_primary_memid eq "SRAM" ? memoryOffsetToAddress("CORE_NAME_CM33_0_S", sram_memory_view_maps ne "" ? splitAt(sram_memory_view_maps, 0) : "", "SRAM", 0) : (app3_primary_memid eq "CM55_ITCM_INTERNAL" ? memoryOffsetToAddress("CORE_NAME_CM33_0_S", memoryViewMaps("CM55_ITCM_INTERNAL", "CORE_NAME_CM33_0_S") ne "" ? splitAt(memoryViewMaps("CM55_ITCM_INTERNAL", "CORE_NAME_CM33_0_S"), 0) : "", "CM55_ITCM_INTERNAL", 0) : (app3_primary_memid eq "SOCMEM_RAM" ? memoryOffsetToAddress("CORE_NAME_CM33_0_S", memoryViewMaps("SOCMEM_RAM", "CORE_NAME_CM33_0_S") ne "" ? splitAt(memoryViewMaps("SOCMEM_RAM", "CORE_NAME_CM33_0_S"), 0) : "", "SOCMEM_RAM", 0) : (first_smif_memory ne "" ? memoryOffsetToAddress("CORE_NAME_CM33_0_S", first_smif_memory_view_maps ne "" ? splitAt(first_smif_memory_view_maps, 0) : "", first_smif_memory, 0) : 1610612736))))) + (app3_primary_cmse_attr eq "SECURE" ? 268435456 : 0)}`' />
    <Variable id='app3_primary_var_resultant_addr' value='`${toHex(app3_primary_var_base_addr + app3_manual_primary_offset)}`' />
    <Variable id='app3_primary_var_erase_val' value='`${app3_primary_devtype eq "INTERNAL_RRAM" || app3_primary_memid eq "SRAM" || app3_primary_memid eq "CM55_ITCM_INTERNAL" || app3_primary_memid eq "SOCMEM_RAM" ? toHex($ERASE_VAL_INTERNAL_MEMORIES) : toHex($ERASE_VAL_EXTERNAL_FLASH)}`' />
    
    <Variable id='app4_primary_cmse_attr' value='`${app4_secure_access ? "SECURE" : "NON_SECURE"}`' />
    <Variable id='app4_primary_memid' value='`${app4_manual_primary_memory}`' />
    <Variable id='app4_primary_devtype' value='`${app4_primary_memid eq "SMIF0MEM0" || app4_primary_memid eq "SMIF0MEM1" || app4_primary_memid eq "SMIF0MEM2" || app4_primary_memid eq "SMIF0MEM3" || app4_primary_memid eq "SMIF1MEM0" || app4_primary_memid eq "SMIF1MEM1" || app4_primary_memid eq "SMIF1MEM2" || app4_primary_memid eq "SMIF1MEM3" ? (app4_primary_cmse_attr eq "SECURE" ? "EXTERNAL_S_FLASH" : "EXTERNAL_NS_FLASH") : (app4_primary_memid eq "RRAM" ? "INTERNAL_RRAM" : "ERROR")}`' />
    <Variable id='app4_primary_var_offset' value='`${app4_manual_primary_offset}`' />
    <Variable id='app4_primary_var_size' value='`${app4_manual_primary_size}`' />
    <Variable id='app4_primary_var_base_addr' value='`${(app4_primary_memid eq "RRAM" ? memoryOffsetToAddress("CORE_NAME_CM33_0_S", rram_memory_view_maps ne "" ? splitAt(rram_memory_view_maps, 0) : "", "RRAM", 0) : (app4_primary_memid eq "SRAM" ? memoryOffsetToAddress("CORE_NAME_CM33_0_S", sram_memory_view_maps ne "" ? splitAt(sram_memory_view_maps, 0) : "", "SRAM", 0) : (app4_primary_memid eq "CM55_ITCM_INTERNAL" ? memoryOffsetToAddress("CORE_NAME_CM33_0_S", memoryViewMaps("CM55_ITCM_INTERNAL", "CORE_NAME_CM33_0_S") ne "" ? splitAt(memoryViewMaps("CM55_ITCM_INTERNAL", "CORE_NAME_CM33_0_S"), 0) : "", "CM55_ITCM_INTERNAL", 0) : (app4_primary_memid eq "SOCMEM_RAM" ? memoryOffsetToAddress("CORE_NAME_CM33_0_S", memoryViewMaps("SOCMEM_RAM", "CORE_NAME_CM33_0_S") ne "" ? splitAt(memoryViewMaps("SOCMEM_RAM", "CORE_NAME_CM33_0_S"), 0) : "", "SOCMEM_RAM", 0) : (first_smif_memory ne "" ? memoryOffsetToAddress("CORE_NAME_CM33_0_S", first_smif_memory_view_maps ne "" ? splitAt(first_smif_memory_view_maps, 0) : "", first_smif_memory, 0) : 1610612736))))) + (app4_primary_cmse_attr eq "SECURE" ? 268435456 : 0)}`' />
    <Variable id='app4_primary_var_resultant_addr' value='`${toHex(app4_primary_var_base_addr + app4_manual_primary_offset)}`' />
    <Variable id='app4_primary_var_erase_val' value='`${app4_primary_devtype eq "INTERNAL_RRAM" || app4_primary_memid eq "SRAM" || app4_primary_memid eq "CM55_ITCM_INTERNAL" || app4_primary_memid eq "SOCMEM_RAM" ? toHex($ERASE_VAL_INTERNAL_MEMORIES) : toHex($ERASE_VAL_EXTERNAL_FLASH)}`' />
    
    <!-- Bootloader Variables -->
    <Variable id='bootloader_memory_region_location' value='`${bootloader_nvm_its_MEMORY_PLACED eq true ? findMemoryRegionByGuid("7F3E9B2A-5C8D-4E1F-9A6B-3D7C2E8F1A4B") : ""}`' />
    <Variable id='bootloader_region_ref' value='`${bootloader_nvm_its_MEMORY_PLACED eq true ? getExposedMember(bootloader_memory_region_location, "regionId") : ""}`' />
    <Variable id='bootloader_region_instance' value='`${bootloader_nvm_its_MEMORY_PLACED eq true ? getParamValue("reserved_memory_region_its", "location") : ""}`' />
    <Variable id='bootloader_domain_ref' value='`${bootloader_nvm_its_MEMORY_PLACED eq true ? getExposedMember(bootloader_memory_region_location, "domain") : ""}`' />
    <Variable id='bootloader_cmse_attr' value='`${bootloader_domain_ref ne "" ? getExposedMember(getBlockFromInstance(bootloader_domain_ref), "cmseAttribute") : "NON_SECURE"}`' />
    <Variable id='bootloader_memid' value='`${bootloader_nvm_its_MEMORY_PLACED eq true ? getExposedMember(bootloader_memory_region_location, "memoryId") : "RRAM"}`' />
    <Variable id='bootloader_var_devtype' value='`${bootloader_memid eq "RRAM" ? "INTERNAL_RRAM" : (bootloader_memid eq "SMIF0MEM0" || bootloader_memid eq "SMIF0MEM1" || bootloader_memid eq "SMIF0MEM2" || bootloader_memid eq "SMIF0MEM3" || bootloader_memid eq "SMIF1MEM0" || bootloader_memid eq "SMIF1MEM1" || bootloader_memid eq "SMIF1MEM2" || bootloader_memid eq "SMIF1MEM3" ? "EXTERNAL_S_FLASH" : bootloader_memid)}`' />
    <Variable id='bootloader_var_offset' value='`${bootloader_nvm_its_MEMORY_PLACED eq true ? getExposedMember(bootloader_memory_region_location, "offset") : 0}`' />
    <Variable id='bootloader_var_size' value='`${bootloader_nvm_its_MEMORY_PLACED eq true ? getExposedMember(bootloader_memory_region_location, "size") : 0}`' />
    <Variable id='bootloader_var_base_addr' value='`${bootloader_base_address_dynamic + (bootloader_cmse_attr eq "SECURE" ? 268435456 : 0)}`' />
    <Variable id='bootloader_var_resultant_addr' value='`${bootloader_var_offset ne "" ? toHex(bootloader_var_base_addr + bootloader_var_offset) : ""}`' />
    <Variable id='bootloader_var_erase_val' value='`${bootloader_var_devtype eq "INTERNAL_RRAM" || bootloader_var_devtype eq "INTERNAL_S_SRAM" || bootloader_var_devtype eq "INTERNAL_NS_SRAM" || bootloader_var_devtype eq "INTERNAL_S_ITCM" || bootloader_var_devtype eq "INTERNAL_S_SOCMEM" ? toHex($ERASE_VAL_INTERNAL_MEMORIES) : toHex($ERASE_VAL_EXTERNAL_FLASH)}`' />
    
    <!-- Scratch Region Variables -->
    <Variable id='scratch_var_region_ref' value='`${scratch_region}`' />
    <Variable id='scratch_var_domain_ref' value='`${scratch_region ne "" ? getExposedMember(getBlockFromInstance(scratch_region), "domain") : ""}`' />
    <Variable id='scratch_var_cmse_attr' value='`${scratch_var_domain_ref ne "" ? getExposedMember(getBlockFromInstance(scratch_var_domain_ref), "cmseAttribute") : "NON_SECURE"}`' />
    <Variable id='scratch_var_memid' value='`${scratch_region ne "" ? getExposedMember(getBlockFromInstance(scratch_region), "memoryId") : "RRAM"}`' />
    <Variable id='scratch_var_devtype' value='`${scratch_var_memid eq "SMIF0MEM0" || scratch_var_memid eq "SMIF0MEM1" || scratch_var_memid eq "SMIF0MEM2" || scratch_var_memid eq "SMIF0MEM3" || scratch_var_memid eq "SMIF1MEM0" || scratch_var_memid eq "SMIF1MEM1" || scratch_var_memid eq "SMIF1MEM2" || scratch_var_memid eq "SMIF1MEM3" ? "EXTERNAL_S_FLASH" : (scratch_var_memid eq "RRAM" ? "INTERNAL_RRAM" : "ERROR")}`' />
    <Variable id='scratch_var_offset' value='`${getExposedMember(getBlockFromInstance(scratch_region), "offset")}`' />
    <Variable id='scratch_var_size' value='`${getExposedMember(getBlockFromInstance(scratch_region), "size")}`' />
    <Variable id='scratch_var_base_addr' value='`${scratch_base_address_dynamic + (scratch_var_cmse_attr eq "SECURE" ? 268435456 : 0)}`' />
    <Variable id='scratch_var_resultant_addr' value='`${scratch_var_offset ne "" ? toHex(scratch_var_base_addr + scratch_var_offset) : ""}`' />
    
    <!-- Swap Status Region Variables -->
    <Variable id='swap_status_var_region_ref' value='`${swap_status_region}`' />
    <Variable id='swap_status_var_domain_ref' value='`${swap_status_region ne "" ? getExposedMember(getBlockFromInstance(swap_status_region), "domain") : ""}`' />
    <Variable id='swap_status_var_cmse_attr' value='`${swap_status_var_domain_ref ne "" ? getExposedMember(getBlockFromInstance(swap_status_var_domain_ref), "cmseAttribute") : "NON_SECURE"}`' />
    <Variable id='swap_status_var_memid' value='`${swap_status_region ne "" ? getExposedMember(getBlockFromInstance(swap_status_region), "memoryId") : "RRAM"}`' />
    <Variable id='swap_status_var_devtype' value='`${swap_status_var_memid eq "SMIF0MEM0" || swap_status_var_memid eq "SMIF0MEM1" || swap_status_var_memid eq "SMIF0MEM2" || swap_status_var_memid eq "SMIF0MEM3" || swap_status_var_memid eq "SMIF1MEM0" || swap_status_var_memid eq "SMIF1MEM1" || swap_status_var_memid eq "SMIF1MEM2" || swap_status_var_memid eq "SMIF1MEM3" ? "EXTERNAL_S_FLASH" : (swap_status_var_memid eq "RRAM" ? "INTERNAL_RRAM" : "ERROR")}`' />
    <Variable id='swap_status_var_offset' value='`${getExposedMember(getBlockFromInstance(swap_status_region), "offset")}`' />
    <Variable id='swap_status_var_size' value='`${getExposedMember(getBlockFromInstance(swap_status_region), "size")}`' />
    <Variable id='swap_status_var_base_addr' value='`${swap_status_base_address_dynamic + (swap_status_var_cmse_attr eq "SECURE" ? 268435456 : 0)}`' />
    <Variable id='swap_status_var_resultant_addr' value='`${swap_status_var_offset ne "" ? toHex(swap_status_var_base_addr + swap_status_var_offset) : ""}`' />

  </Variables>

  <DRCs>
    <!-- Application 0 DRCs -->
    <DRC type="INFO" text="Application 0: Secondary slot size (`${app0_secondary_var_size}`) is larger than primary slot size (`${app0_primary_var_size}`). Secondary slot size will be reduced to match primary slot size." condition="`${app0_secondary_region ne &quot;&quot; &amp;&amp; app0_secondary_var_size &gt; app0_primary_var_size}`" />
    <DRC type="ERROR" text="Application 0: Primary slot size (`${app0_primary_var_size}`) is larger than secondary slot size (`${app0_secondary_var_size}`). Upgrade slot size is insufficient." condition="`${app0_secondary_region ne &quot;&quot; &amp;&amp; app0_primary_var_size &gt; app0_secondary_var_size}`" />
    <DRC type="ERROR" text="Application 0: Selected secondary slot region is not supported. Please select a different memory region." condition="`${app0_secondary_devtype eq &quot;ERROR&quot;}`" />
    <DRC type="ERROR" text="Application 0: Selected primary slot memory type is not supported. Please select a different memory type." condition="`${app0_primary_devtype eq &quot;ERROR&quot;}`" />
    
    <!-- Application 1 DRCs -->
    <DRC type="INFO" text="Application 1: Secondary slot size (`${app1_secondary_var_size}`) is larger than primary slot size (`${app1_primary_var_size}`). Secondary slot size will be reduced to match primary slot size." condition="`${(1 &lt; image_count) &amp;&amp; app1_secondary_region ne &quot;&quot; &amp;&amp; app1_secondary_var_size &gt; app1_primary_var_size}`" />
    <DRC type="ERROR" text="Application 1: Primary slot size (`${app1_primary_var_size}`) is larger than secondary slot size (`${app1_secondary_var_size}`). Upgrade slot size is insufficient." condition="`${(1 &lt; image_count) &amp;&amp; app1_secondary_region ne &quot;&quot; &amp;&amp; app1_primary_var_size &gt; app1_secondary_var_size}`" />
    <DRC type="ERROR" text="Application 1: Selected secondary slot region is not supported. Please select a different memory region." condition="`${(1 &lt; image_count) &amp;&amp; app1_secondary_devtype eq &quot;ERROR&quot;}`" />
    <DRC type="ERROR" text="Application 1: Selected primary slot memory type is not supported. Please select a different memory type." condition="`${(1 &lt; image_count) &amp;&amp; app1_primary_devtype eq &quot;ERROR&quot;}`" />
    
    <!-- Application 2 DRCs -->
    <DRC type="INFO" text="Application 2: Secondary slot size (`${app2_secondary_var_size}`) is larger than primary slot size (`${app2_primary_var_size}`). Secondary slot size will be reduced to match primary slot size." condition="`${(2 &lt; image_count) &amp;&amp; app2_secondary_region ne &quot;&quot; &amp;&amp; app2_secondary_var_size &gt; app2_primary_var_size}`" />
    <DRC type="ERROR" text="Application 2: Primary slot size (`${app2_primary_var_size}`) is larger than secondary slot size (`${app2_secondary_var_size}`). Upgrade slot size is insufficient." condition="`${(2 &lt; image_count) &amp;&amp; app2_secondary_region ne &quot;&quot; &amp;&amp; app2_primary_var_size &gt; app2_secondary_var_size}`" />
    <DRC type="ERROR" text="Application 2: Selected secondary slot region is not supported. Please select a different memory region." condition="`${(2 &lt; image_count) &amp;&amp; app2_secondary_devtype eq &quot;ERROR&quot;}`" />
    <DRC type="ERROR" text="Application 2: Selected primary slot memory type is not supported. Please select a different memory type." condition="`${(2 &lt; image_count) &amp;&amp; app2_primary_devtype eq &quot;ERROR&quot;}`" />
    
    <!-- Application 3 DRCs -->
    <DRC type="INFO" text="Application 3: Secondary slot size (`${app3_secondary_var_size}`) is larger than primary slot size (`${app3_primary_var_size}`). Secondary slot size will be reduced to match primary slot size." condition="`${(3 &lt; image_count) &amp;&amp; app3_secondary_region ne &quot;&quot; &amp;&amp; app3_secondary_var_size &gt; app3_primary_var_size}`" />
    <DRC type="ERROR" text="Application 3: Primary slot size (`${app3_primary_var_size}`) is larger than secondary slot size (`${app3_secondary_var_size}`). Upgrade slot size is insufficient." condition="`${(3 &lt; image_count) &amp;&amp; app3_secondary_region ne &quot;&quot; &amp;&amp; app3_primary_var_size &gt; app3_secondary_var_size}`" />
    <DRC type="ERROR" text="Application 3: Selected secondary slot region is not supported. Please select a different memory region." condition="`${(3 &lt; image_count) &amp;&amp; app3_secondary_devtype eq &quot;ERROR&quot;}`" />
    <DRC type="ERROR" text="Application 3: Selected primary slot memory type is not supported. Please select a different memory type." condition="`${(3 &lt; image_count) &amp;&amp; app3_primary_devtype eq &quot;ERROR&quot;}`" />
    
    <!-- Application 4 DRCs -->
    <DRC type="INFO" text="Application 4: Secondary slot size (`${app4_secondary_var_size}`) is larger than primary slot size (`${app4_primary_var_size}`). Secondary slot size will be reduced to match primary slot size." condition="`${(4 &lt; image_count) &amp;&amp; app4_secondary_region ne &quot;&quot; &amp;&amp; app4_secondary_var_size &gt; app4_primary_var_size}`" />
    <DRC type="ERROR" text="Application 4: Primary slot size (`${app4_primary_var_size}`) is larger than secondary slot size (`${app4_secondary_var_size}`). Upgrade slot size is insufficient." condition="`${(4 &lt; image_count) &amp;&amp; app4_secondary_region ne &quot;&quot; &amp;&amp; app4_primary_var_size &gt; app4_secondary_var_size}`" />
    <DRC type="ERROR" text="Application 4: Selected secondary slot region is not supported. Please select a different memory region." condition="`${(4 &lt; image_count) &amp;&amp; app4_secondary_devtype eq &quot;ERROR&quot;}`" />
    <DRC type="ERROR" text="Application 4: Selected primary slot memory type is not supported. Please select a different memory type." condition="`${(4 &lt; image_count) &amp;&amp; app4_primary_devtype eq &quot;ERROR&quot;}`" />

    <!-- Region Selection DRCs -->
    <DRC type="WARNING" text="Measured boot is enabled but no MCUBoot shared data region is selected. Please select a memory region." condition="`${measured_boot eq true &amp;&amp; measured_boot_record_region eq &quot;&quot;}`" />
    
    <!-- Application RAM Load Region DRCs -->
    <DRC type="WARNING" text="Application 0: RAM load is enabled but no RAM load region is selected. Please select a memory region." condition="`${app0_ram_load eq true &amp;&amp; app0_ram_load_region eq &quot;&quot;}`" />
    <DRC type="WARNING" text="Application 1: RAM load is enabled but no RAM load region is selected. Please select a memory region." condition="`${(1 &lt; image_count) &amp;&amp; app1_ram_load eq true &amp;&amp; app1_ram_load_region eq &quot;&quot;}`" />
    <DRC type="WARNING" text="Application 2: RAM load is enabled but no RAM load region is selected. Please select a memory region." condition="`${(2 &lt; image_count) &amp;&amp; app2_ram_load eq true &amp;&amp; app2_ram_load_region eq &quot;&quot;}`" />
    <DRC type="WARNING" text="Application 3: RAM load is enabled but no RAM load region is selected. Please select a memory region." condition="`${(3 &lt; image_count) &amp;&amp; app3_ram_load eq true &amp;&amp; app3_ram_load_region eq &quot;&quot;}`" />
    <DRC type="WARNING" text="Application 4: RAM load is enabled but no RAM load region is selected. Please select a memory region." condition="`${(4 &lt; image_count) &amp;&amp; app4_ram_load eq true &amp;&amp; app4_ram_load_region eq &quot;&quot;}`" />

    <!-- Swap Mode Region DRCs -->
    <DRC type="WARNING" text="Swap upgrade mode is enabled but no swap status region is selected. Please select a memory region for swap status." condition="`${upgrade_mode eq &quot;swap&quot; &amp;&amp; swap_status_region eq &quot;&quot;}`" />
    <DRC type="WARNING" text="Swap upgrade mode is enabled but no scratch region is selected. Please select a memory region for scratch area." condition="`${upgrade_mode eq &quot;swap&quot; &amp;&amp; scratch_region eq &quot;&quot;}`" />

    <!-- Secondary Slot Region DRCs -->
    <DRC type="WARNING" text="Application 0: No secondary slot region is selected. Firmware upgrade functionality will not be available for this application." condition="`${app0_secondary_region eq &quot;&quot;}`" />
    <DRC type="WARNING" text="Application 1: No secondary slot region is selected. Firmware upgrade functionality will not be available for this application." condition="`${(1 &lt; image_count) &amp;&amp; app1_secondary_region eq &quot;&quot;}`" />
    <DRC type="WARNING" text="Application 2: No secondary slot region is selected. Firmware upgrade functionality will not be available for this application." condition="`${(2 &lt; image_count) &amp;&amp; app2_secondary_region eq &quot;&quot;}`" />
    <DRC type="WARNING" text="Application 3: No secondary slot region is selected. Firmware upgrade functionality will not be available for this application." condition="`${(3 &lt; image_count) &amp;&amp; app3_secondary_region eq &quot;&quot;}`" />
    <DRC type="WARNING" text="Application 4: No secondary slot region is selected. Firmware upgrade functionality will not be available for this application." condition="`${(4 &lt; image_count) &amp;&amp; app4_secondary_region eq &quot;&quot;}`" />
  </DRCs>

  <ConfigFirmware>
    <!-- Generate memorymap.h -->
    <ConfigFile name="memorymap.h">
      <Line value="/* AUTO-GENERATED FILE, DO NOT EDIT. ALL CHANGES WILL BE LOST! */" />
      <Line value="#pragma once" />
      <Line value="" />
      <Line value="#if defined(COMPONENT_MW_IFX_MCUBOOT_PSE84)" />
      <Line value="" />
      <Line value="#include &lt;stdint.h&gt;" />
      <Line value="#include &quot;bootutil/bootutil.h&quot;" />
      <Line value="#include &quot;flash_map_backend.h&quot;" />
      <Line value="" />
      <Line value="#define MEMORYMAP_GENERATED_AREAS 1" />
      <Line value="" />
      <Line value="extern struct flash_device flash_devices[];" />
      <Line value="extern struct flash_area *boot_area_descs[];" />
      <Line value="" />
      <Line value="extern uint8_t memory_areas_primary[];" />
      <Line value="extern uint8_t memory_areas_secondary[];" />
      <Line value="" />
      <Line value="enum " />
      <Line value="{" />
      <Line value="	INTERNAL_S_SRAM," />
      <Line value="	INTERNAL_NS_SRAM," />
      <Line value="	INTERNAL_RRAM," />
      <Line value="	EXTERNAL_S_FLASH," />
      <Line value="	EXTERNAL_NS_FLASH," />
      <Line value="};" />
      <Line value="" />
      <Line value="enum " />
      <Line value="{" />
      <Line value="	FLASH_AREA_BOOTLOADER = 0U," />
      <Line value="	FLASH_AREA_IMG_1_PRIMARY = 1U," />
      <Line value="	FLASH_AREA_IMG_1_SECONDARY = 2U," />
      <Line value="	FLASH_AREA_IMG_2_PRIMARY = 4U," />
      <Line value="	FLASH_AREA_IMG_2_SECONDARY = 5U," />
      <Line value="	FLASH_AREA_IMG_3_PRIMARY = 6U," />
      <Line value="	FLASH_AREA_IMG_3_SECONDARY = 7U," />
      <Line value="	FLASH_AREA_IMG_4_PRIMARY = 8U," />
      <Line value="	FLASH_AREA_IMG_4_SECONDARY = 9U," />
      <Line value="	FLASH_AREA_IMG_5_PRIMARY = 10U," />
      <Line value="	FLASH_AREA_IMG_5_SECONDARY = 11U," />
      <Line value="	FLASH_AREA_IMAGE_SWAP_STATUS = 12U," />
      <Line value="	FLASH_AREA_IMAGE_SCRATCH = 13U," />
      <Line value="};" />
      <Line value="" />
      <Line value="typedef enum " />
      <Line value="{" />
      <Line value="	IMAGE_BOOT_MODE_FLASH = 0U," />
      <Line value="	IMAGE_BOOT_MODE_RAM = 1U," />
      <Line value="} image_boot_mode_t;" />
      <Line value="" />
      <Line value="typedef struct image_boot_config_s " />
      <Line value="{" />
      <Line value="	image_boot_mode_t mode;" />
      <Line value="	uint32_t address;" />
      <Line value="	uint32_t size;" />
      <Line value="} image_boot_config_t;" />
      <Line value="" />
      <Line value="extern image_boot_config_t image_boot_config[BOOT_IMAGE_NUMBER];" />
      <Line value="" />
      <Line value="#endif /* defined(COMPONENT_MW_IFX_MCUBOOT_PSE84) */" />
    </ConfigFile>

    <!-- Generate memorymap.c -->
    <ConfigFile name="memorymap.c">
      <Line value="// This file is automatically generated by the EdgeProtect Bootloader Configuration." />
      <Line value="#include &quot;memorymap.h&quot;" />
      <Line value="" />
      <Line value="#if defined(COMPONENT_MW_IFX_MCUBOOT_PSE84)" />
      <Line value="" />
      <Line value="#include &quot;flash_map_backend.h&quot;" />
      <Line value="" />
      <Line value="struct flash_device flash_devices[] =" />
      <Line value="{" />
      <Line value="	[INTERNAL_S_SRAM] = {" />
      <Line value="		.address      = `${toHex(sram_memory_s_base_address)}`U," />
      <Line value="		.size         = `${toHex(sram_memory_size)}`U," />
      <Line value="		.erase_size   = `${toHex(sram_memory_alignment)}`U," />
      <Line value="		.erase_val    = `${toHex($ERASE_VAL_INTERNAL_MEMORIES)}`U," />
      <Line value="		.device_id    = INTERNAL_S_SRAM," />
      <Line value="	}," />
      <Line value="	[INTERNAL_NS_SRAM] = {" />
      <Line value="		.address      = `${toHex(sram_memory_ns_base_address)}`U," />
      <Line value="		.size         = `${toHex(sram_memory_size)}`U," />
      <Line value="		.erase_size   = `${toHex(sram_memory_alignment)}`U," />
      <Line value="		.erase_val    = `${toHex($ERASE_VAL_INTERNAL_MEMORIES)}`U," />
      <Line value="		.device_id    = INTERNAL_NS_SRAM," />
      <Line value="	}," />
      <Line value="	[INTERNAL_RRAM] = {" />
      <Line value="		.address      = `${toHex(rram_memory_base_address)}`U," />
      <Line value="		.size         = `${toHex(rram_memory_size)}`U," />
      <Line value="		 /* Real erase size of RRAM is 16 bytes," />
      <Line value="		    but to avoid of decreasing of bootloader performance" />
      <Line value="		    and increasing of RAM consumption," />
      <Line value="		    the virtual erase size is used increased to 512 bytes */" />
      <Line value="		.erase_size   = 0x200U," />
      <Line value="		.erase_val    = `${toHex($ERASE_VAL_INTERNAL_MEMORIES)}`U," />
      <Line value="		.device_id    = INTERNAL_RRAM," />
      <Line value="	}," />
      <Line value="	[EXTERNAL_S_FLASH] = {" />
      <Line value="		.address      = `${toHex(first_smif_memory_s_base_address)}`U," />
      <Line value="		.size         = `${toHex(first_smif_memory_size)}`U," />
      <Line value="		.erase_size   = `${toHex(first_smif_memory_alignment)}`U," />
      <Line value="		.erase_val    = `${toHex($ERASE_VAL_EXTERNAL_FLASH)}`U," />
      <Line value="		.device_id    = EXTERNAL_S_FLASH," />
      <Line value="	}," />
      <Line value="	[EXTERNAL_NS_FLASH] = {" />
      <Line value="		.address      = `${toHex(first_smif_memory_ns_base_address)}`U," />
      <Line value="		.size         = `${toHex(first_smif_memory_size)}`U," />
      <Line value="		.erase_size   = `${toHex(first_smif_memory_alignment)}`U," />
      <Line value="		.erase_val    = `${toHex($ERASE_VAL_EXTERNAL_FLASH)}`U," />
      <Line value="		.device_id    = EXTERNAL_NS_FLASH," />
      <Line value="	}," />
      <Line value="};" />
      <Line value="" />
      <Line value="struct flash_area flash_areas[] =" />
      <Line value="{" />
      <Line value="	{" />
      <Line value="		.fa_id        = FLASH_AREA_BOOTLOADER," />
      <Line value="		.fa_device_id = `${bootloader_var_devtype}`," />
      <Line value="		.fa_off       = `${bootloader_var_offset}`," />
      <Line value="		.fa_size      = `${bootloader_var_size}`," />
      <Line value="	}," />
      <Repeat count="$MAX_APPLICATIONS">
        <Line value="	{" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="		.fa_id        = FLASH_AREA_IMG_`${$idx + 1}`_PRIMARY," include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="		.fa_device_id = `${app$idx_primary_devtype}`," include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="		.fa_off       = `${app$idx_primary_var_offset}`," include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="		.fa_size      = `${app$idx_primary_var_size}`," include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="	}," include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="	{" include="`${($idx == 0 ? true : $idx &lt; image_count) &amp;&amp; app$idx_secondary_region_ref ne &quot;&quot;}`" />
        <Line value="		.fa_id        = FLASH_AREA_IMG_`${$idx + 1}`_SECONDARY," include="`${($idx == 0 ? true : $idx &lt; image_count) &amp;&amp; app$idx_secondary_region_ref ne &quot;&quot;}`" />
        <Line value="		.fa_device_id = `${app$idx_secondary_devtype}`," include="`${($idx == 0 ? true : $idx &lt; image_count) &amp;&amp; app$idx_secondary_region_ref ne &quot;&quot;}`" />
        <Line value="		.fa_off       = `${app$idx_secondary_var_offset}`," include="`${($idx == 0 ? true : $idx &lt; image_count) &amp;&amp; app$idx_secondary_region_ref ne &quot;&quot;}`" />
        <Line value="		.fa_size      = `${app$idx_secondary_var_size > app$idx_primary_var_size ? app$idx_primary_var_size : app$idx_secondary_var_size}`," include="`${($idx == 0 ? true : $idx &lt; image_count) &amp;&amp; app$idx_secondary_region_ref ne &quot;&quot;}`" />
        <Line value="	}," include="`${($idx == 0 ? true : $idx &lt; image_count) &amp;&amp; app$idx_secondary_region_ref ne &quot;&quot;}`" />
      </Repeat>
      <!-- Swap mode flash areas -->
      <Line value="	{" include="`${upgrade_mode eq &quot;swap&quot;}`" />
      <Line value="		.fa_id        = FLASH_AREA_IMAGE_SWAP_STATUS," include="`${upgrade_mode eq &quot;swap&quot;}`" />
      <Line value="		.fa_device_id = `${swap_status_var_devtype}`," include="`${upgrade_mode eq &quot;swap&quot;}`" />
      <Line value="		.fa_off       = `${swap_status_var_offset}`," include="`${upgrade_mode eq &quot;swap&quot;}`" />
      <Line value="		.fa_size      = `${swap_status_var_size}`," include="`${upgrade_mode eq &quot;swap&quot;}`" />
      <Line value="	}," include="`${upgrade_mode eq &quot;swap&quot;}`" />
      <Line value="	{" include="`${upgrade_mode eq &quot;swap&quot;}`" />
      <Line value="		.fa_id        = FLASH_AREA_IMAGE_SCRATCH," include="`${upgrade_mode eq &quot;swap&quot;}`" />
      <Line value="		.fa_device_id = `${scratch_var_devtype}`," include="`${upgrade_mode eq &quot;swap&quot;}`" />
      <Line value="		.fa_off       = `${scratch_var_offset}`," include="`${upgrade_mode eq &quot;swap&quot;}`" />
      <Line value="		.fa_size      = `${scratch_var_size}`," include="`${upgrade_mode eq &quot;swap&quot;}`" />
      <Line value="	}," include="`${upgrade_mode eq &quot;swap&quot;}`" />
      <Line value="};" />
      <Line value="" />
      <Line value="struct flash_area *boot_area_descs[] =" />
      <Line value="{" />
      <Line value="	&amp;flash_areas[0U]," />
      <Repeat count="$MAX_APPLICATIONS">
        <Line value="	&amp;flash_areas[`${$idx * 2 + 1}`U]," include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="	&amp;flash_areas[`${$idx * 2 + 2}`U]," include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
      </Repeat>
      <Line value="	&amp;flash_areas[`${image_count * 2 +1}`U]," include="`${upgrade_mode eq &quot;swap&quot;}`" />
      <Line value="	&amp;flash_areas[`${image_count * 2 + 2}`U]," include="`${upgrade_mode eq &quot;swap&quot;}`" />
      <Line value="	NULL" />
      <Line value="};" />
      <Line value="" />
      <Line value="uint8_t memory_areas_primary[] =" />
      <Line value="{" />
      <Repeat count="$MAX_APPLICATIONS">
        <Line value="	FLASH_AREA_IMG_`${$idx + 1}`_PRIMARY, " include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
      </Repeat>
      <Line value="};" />
      <Line value="" />
      <Line value="uint8_t memory_areas_secondary[] =" />
      <Line value="{" />
      <Repeat count="$MAX_APPLICATIONS">
        <Line value="	FLASH_AREA_IMG_`${$idx + 1}`_SECONDARY, " include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
      </Repeat>
      <Line value="};" />
      <Line value="" />
      <Line value="image_boot_config_t image_boot_config[BOOT_IMAGE_NUMBER] = {" />
      <Repeat count="$MAX_APPLICATIONS">
        <Line value="	{" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="		.mode     = `${app$idx_ram_load ? &quot;IMAGE_BOOT_MODE_RAM&quot; : &quot;IMAGE_BOOT_MODE_FLASH&quot;}`," include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="		.address  = `${app$idx_ram_load ? app$idx_ramload_address : app$idx_primary_var_offset}`," include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="		.size     = `${app$idx_ram_load ? app$idx_ram_load_region_size : app$idx_primary_var_size}`," include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="	}," include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
      </Repeat>
      <Line value="};" />
      <Line value="" />
      <Line value="#endif /* defined(COMPONENT_MW_IFX_MCUBOOT_PSE84) */" />
    </ConfigFile>

    <!-- Generate mcuboot_config.h -->
    <ConfigFile name="mcuboot_config.h">
      <Line value="/* This file is automatically generated by the EdgeProtect Bootloader Configuration. */" />
      <Line value="#ifndef MCUBOOT_CONFIG_H" />
      <Line value="#define MCUBOOT_CONFIG_H" />
      <Line value="" />

      <!-- Variable definitions for security configuration -->
      <Line value="/* Security Configuration Variables */" />
      
      <Line value="/* MCUBoot Upgrade Strategy Configuration */" />
      <!-- Upgrade Mode Configuration -->
      <Line value="#define MCUBOOT_OVERWRITE_ONLY (1)" include="`${upgrade_mode eq &quot;overwrite&quot;}`" />
      <Line value="#define MCUBOOT_BOOTSTRAP (1)" include="`${upgrade_mode eq &quot;swap&quot;}`" />
      <Line value="#define MCUBOOT_SWAP_USING_STATUS (1)" include="`${upgrade_mode eq &quot;swap&quot;}`" />
      <Line value="#define MCUBOOT_SWAP_USING_SCRATCH (1)" include="`${upgrade_mode eq &quot;swap&quot;}`" />
      <Line value="" />

      <!-- Logging Level Configuration -->
      <Line value="/* MCUBoot Logging Level Configuration */" />
      <Line value="#define MCUBOOT_LOG_LEVEL MCUBOOT_LOG_LEVEL_OFF" include="`${logging_level eq &quot;off&quot;}`" />
      <Line value="#define MCUBOOT_LOG_LEVEL MCUBOOT_LOG_LEVEL_DEBUG" include="`${logging_level eq &quot;dbg&quot;}`" />
      <Line value="#define MCUBOOT_LOG_LEVEL MCUBOOT_LOG_LEVEL_INFO" include="`${logging_level eq &quot;inf&quot;}`" />
      <Line value="#define MCUBOOT_LOG_LEVEL MCUBOOT_LOG_LEVEL_WARNING" include="`${logging_level eq &quot;wrn&quot;}`" />
      <Line value="#define MCUBOOT_LOG_LEVEL MCUBOOT_LOG_LEVEL_ERROR" include="`${logging_level eq &quot;err&quot;}`" />
      <Line value="#define MCUBOOT_HAVE_LOGGING" include="`${logging_level ne &quot;off&quot;}`" />
      <Line value="" />

      <!-- Fault Injection Hardening Level Configuration -->
      <Line value="/* MCUBoot Fault Injection Hardening (FIH) Level Configuration */" />
      <Line value="#define MCUBOOT_FIH_PROFILE_OFF" include="`${fih_level eq &quot;off&quot;}`" />
      <Line value="#define MCUBOOT_FIH_PROFILE_LOW" include="`${fih_level eq &quot;low&quot;}`" />
      <Line value="#define MCUBOOT_FIH_PROFILE_MEDIUM" include="`${fih_level eq &quot;med&quot;}`" />
      <Line value="#define MCUBOOT_FIH_PROFILE_HIGH" include="`${fih_level eq &quot;high&quot;}`" />
      <Line value="#define MCUBOOT_FIH_PROFILE_ON" include="`${fih_level ne &quot;off&quot;}`" />
      <Line value="" />

      <!-- Image Count Configuration -->
      <Line value="/* MCUBoot Image Count Configuration */" />
      <Line value="#define MCUBOOT_IMAGE_NUMBER (`${image_count}`)" />
      <Line value="" />

      <!-- RAM Load Configuration -->
      <Line value="/* MCUBoot RAM Load Configuration */" include="`${app0_ram_load || (1 &lt; image_count &amp;&amp; app1_ram_load) || (2 &lt; image_count &amp;&amp; app2_ram_load) || (3 &lt; image_count &amp;&amp; app3_ram_load) || (4 &lt; image_count &amp;&amp; app4_ram_load)}`" />
      <Line value="#define MCUBOOT_MULTI_MEMORY_LOAD" include="`${app0_ram_load || (1 &lt; image_count &amp;&amp; app1_ram_load) || (2 &lt; image_count &amp;&amp; app2_ram_load) || (3 &lt; image_count &amp;&amp; app3_ram_load) || (4 &lt; image_count &amp;&amp; app4_ram_load)}`" />
      <Line value="#define MCUBOOT_RAM_LOAD" include="`${app0_ram_load || (1 &lt; image_count &amp;&amp; app1_ram_load) || (2 &lt; image_count &amp;&amp; app2_ram_load) || (3 &lt; image_count &amp;&amp; app3_ram_load) || (4 &lt; image_count &amp;&amp; app4_ram_load)}`" />
      <Line value="#define MULTIPLE_EXECUTABLE_RAM_REGIONS" include="`${app0_ram_load || (1 &lt; image_count &amp;&amp; app1_ram_load) || (2 &lt; image_count &amp;&amp; app2_ram_load) || (3 &lt; image_count &amp;&amp; app3_ram_load) || (4 &lt; image_count &amp;&amp; app4_ram_load)}`" />
      <Line value="#define CY_BOOT_USE_INTERNAL_SRAM" include="`${app0_ram_load || (1 &lt; image_count &amp;&amp; app1_ram_load) || (2 &lt; image_count &amp;&amp; app2_ram_load) || (3 &lt; image_count &amp;&amp; app3_ram_load) || (4 &lt; image_count &amp;&amp; app4_ram_load)}`" />
      <Line value="" include="`${app0_ram_load || (1 &lt; image_count &amp;&amp; app1_ram_load) || (2 &lt; image_count &amp;&amp; app2_ram_load) || (3 &lt; image_count &amp;&amp; app3_ram_load) || (4 &lt; image_count &amp;&amp; app4_ram_load)}`" />

      <!-- Application Slot Configurations -->
      <Line value="/* MCUBoot Application Slot Configurations */" />

      <!-- Bootloader Configuration -->
      <Line value="/* Bootloader Configuration */" />
      <Line value="#define MCUBOOT_BOOTLOADER_SLOT_SIZE (`${bootloader_var_size}`)" />
      <Line value="#define MCUBOOT_BOOTLOADER_DEVICE MCUBOOT_DEVICE_`${bootloader_device}`" />
      <Line value="#define MCUBOOT_BOOTLOADER_OFFSET (`${bootloader_var_offset}`)" />
      <Line value="" />

      <!-- Application Configurations -->
      <Repeat count="$MAX_APPLICATIONS">
        <Line value="/* Application `${$idx + 1}` Configuration */" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="#define MCUBOOT_APP`${$idx + 1}`_SLOT_SIZE (`${app$idx_primary_var_size}`)" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="#define MCUBOOT_APP`${$idx + 1}`_PRIMARY_DEVICE MCUBOOT_DEVICE_`${app$idx_primary_devtype}`" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="#define MCUBOOT_APP`${$idx + 1}`_PRIMARY_OFFSET (`${app$idx_primary_var_offset}`)" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="#define MCUBOOT_APP`${$idx + 1}`_SECONDARY_DEVICE MCUBOOT_DEVICE_`${app$idx_secondary_devtype}`" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="#define MCUBOOT_APP`${$idx + 1}`_SECONDARY_OFFSET (`${app$idx_secondary_var_offset}`)" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="#define MCUBOOT_APP`${$idx + 1}`_RAM_LOAD" include="`${($idx == 0 ? true : $idx &lt; image_count) &amp;&amp; app$idx_ram_load}`" />
        <Line value="#define MCUBOOT_APP`${$idx + 1}`_RAM_LOAD_ADDRESS (`${app$idx_ramload_address}`)" include="`${($idx == 0 ? true : $idx &lt; image_count) &amp;&amp; app$idx_ram_load}`" />
        <Line value="" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />

        <!-- Application Security Configuration -->
        <Line value="/* Application `${$idx + 1}` Security Configuration */" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="#define MCUBOOT_APP`${$idx + 1}`_KEY_SOURCE_PROVISIONED" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="#define MCUBOOT_APP`${$idx + 1}`_SIG_VERIFY_ALGO_PROVISIONED_P256" include="`${($idx == 0 ? true : $idx &lt; image_count) &amp;&amp; app$idx_sig_verify_algo_provisioned eq &quot;ecdsa_p256&quot;}`" />
        <Line value="#define MCUBOOT_APP`${$idx + 1}`_KEY_ENC_ALGO_PROVISIONED_P256" include="`${($idx == 0 ? true : $idx &lt; image_count) &amp;&amp; app$idx_key_encrypt_algo_provisioned eq &quot;ecies_p256&quot;}`" />

        <Line value="#define MCUBOOT_APP`${$idx + 1}`_SIGNATURE_KEY_ID `${app$idx_sig_verify_key_id}`" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
      </Repeat>
      <Line value="" />

      <!-- Device Definition Macros -->
      <Line value="/* MCUBoot Device Definitions */" />
      <Line value="#define MCUBOOT_DEVICE_INTERNAL_RRAM (0)" />
      <Line value="#define MCUBOOT_DEVICE_EXTERNAL_S_FLASH (1)" />
      <Line value="#define MCUBOOT_DEVICE_EXTERNAL_NS_FLASH (2)" />
      <Line value="" />

      <!-- Hardware Rollback Protection Configuration -->
      <Line value="/* MCUBoot Hardware Rollback Protection Configuration */" />
      <Line value="#define MCUBOOT_HW_ROLLBACK_PROT" include="`${hw_rollback_protection}`" />
      <Repeat count="$MAX_APPLICATIONS">
        <Line value="#define HW_ROLLBACK_NUMBER_IMG_`${$idx + 1}` (`${app$idx_hw_rollback_number}`)" include="`${hw_rollback_protection &amp;&amp; ($idx == 0 ? true : $idx &lt; image_count)}`" />
      </Repeat>
      <Line value="" />

      <!-- Dependency Check Configuration -->
      <Line value="/* MCUBoot Image Dependency Check Configuration */" />
      <Line value="#define MCUBOOT_DEPENDENCY_CHECK" include="`${dependency_check}`" />
      <Line value="" />

      <!-- Boot Slot Validation Configuration -->
      <Line value="/* MCUBoot Boot Slot Validation Configuration */" />
      <Line value="#define MCUBOOT_VALIDATE_PRIMARY_SLOT" include="`${validate_boot_slot}`" />
      <Line value="" />

      <!-- Upgrade Slot Validation Configuration -->
      <Line value="/* MCUBoot Upgrade Slot Skip Validation Configuration */" />
      <Line value="#define MCUBOOT_SKIP_VALIDATE_SECONDARY_SLOT" include="`${!validate_upgrade_slot}`" />
      <Line value="" />

      <!-- Built in Keys Configuration -->
      <Line value="/* MCUBoot Built in Keys Configuration */" />
      <Line value="#define MCUBOOT_BUILT_IN_KEYS" include="`${validate_boot_slot || validate_upgrade_slot ? built_in_keys : false}`" />
      <Line value="" />

      <!-- SW Downgrade Prevention Configuration -->
      <Line value="/* MCUBoot SW Downgrade Prevention Configuration */" />
      <Line value="#define MCUBOOT_DOWNGRADE_PREVENTION" include="`${sw_downgrade_prevention_enabled}`" />
      <Line value="" />

      <!-- Watchdog Configuration -->
      <Line value="/* MCUBoot Watchdog Configuration */" />
      <Line value="#define MCUBOOT_WATCHDOG_ENABLED" include="`${watchdog}`" />
      <Line value="#define MCUBOOT_WATCHDOG_FEED()" include="`${watchdog}`" />
      <Line value="" />

      <!-- Security Configuration -->
      <Line value="#define MCUBOOT_KEY_SOURCE_PROVISIONED" />
      <Line value="" />
      <!-- Global Signature Algorithm Configuration -->
      <Line value="/* Global Signature Verification Algorithm */" />
      <Line value="#define MCUBOOT_SIGN_EC256" include="`${app0_sig_verify_algo_provisioned eq &quot;ecdsa_p256&quot; || (1 &lt; image_count &amp;&amp; app1_sig_verify_algo_provisioned eq &quot;ecdsa_p256&quot;) || (2 &lt; image_count &amp;&amp; app2_sig_verify_algo_provisioned eq &quot;ecdsa_p256&quot;) || (3 &lt; image_count &amp;&amp; app3_sig_verify_algo_provisioned eq &quot;ecdsa_p256&quot;) || (4 &lt; image_count &amp;&amp; app4_sig_verify_algo_provisioned eq &quot;ecdsa_p256&quot;)}`" />
      <Line value="" />

      <!-- Provisioned Keys Configuration -->
      <Line value="/* Signature Verification Algorithm (Provisioned Keys) */" />
      <Line value="#define MCUBOOT_SIGN_ECDSA_P256 MCUBOOT_SIG_VERIFY_ALGO_PROVISIONED_P256" />
      <Line value="" />

      <Line value="/* Signature Verification Key ID */" />
      <Line value="#define MCUBOOT_SIGNATURE_KEY_ID MCUBOOT_VAR_SIGNATURE_KEY_ID" />
      <Line value="" />

      <Line value="/* Key Encryption Algorithm (Provisioned Keys) */" />
      <Line value="#define MCUBOOT_KEY_ENC_ECIES_P256 MCUBOOT_KEY_ENC_ALGO_PROVISIONED_P256" />
      <Line value="" />

      <Line value="" />
      <Line value="#define MEMORY_ALIGN (512)" />
      <Line value="#define MCUBOOT_MAX_IMG_SECTORS (512)" />
      <Line value="#define MCUBOOT_USE_FLASH_AREA_GET_SECTORS" />

      <Line value="#define MCUBOOT_USE_MBED_TLS" />
      <Line value="#define USE_IFX_SE_CRYPTO" include="`${validate_boot_slot || validate_upgrade_slot}`" />

      <!-- Flash Device Usage Configuration -->
      <Line value="/* Flash Device Type Definitions */" />
      <Line value="#define CY_BOOT_USE_INTERNAL_FLASH" include="`${bootloader_device eq &quot;INTERNAL_RRAM&quot; || app0_primary_devtype eq &quot;INTERNAL_RRAM&quot; || app0_secondary_devtype eq &quot;INTERNAL_RRAM&quot; || (1 &lt; image_count &amp;&amp; (app1_primary_devtype eq &quot;INTERNAL_RRAM&quot; || app1_secondary_devtype eq &quot;INTERNAL_RRAM&quot;)) || (2 &lt; image_count &amp;&amp; (app2_primary_devtype eq &quot;INTERNAL_RRAM&quot; || app2_secondary_devtype eq &quot;INTERNAL_RRAM&quot;)) || (3 &lt; image_count &amp;&amp; (app3_primary_devtype eq &quot;INTERNAL_RRAM&quot; || app3_secondary_devtype eq &quot;INTERNAL_RRAM&quot;)) || (4 &lt; image_count &amp;&amp; (app4_primary_devtype eq &quot;INTERNAL_RRAM&quot; || app4_secondary_devtype eq &quot;INTERNAL_RRAM&quot;))}`" />

      <Line value="#define CY_BOOT_USE_EXTERNAL_S_FLASH" include="`${bootloader_device eq &quot;EXTERNAL_S_FLASH&quot; || app0_primary_devtype eq &quot;EXTERNAL_S_FLASH&quot; || app0_secondary_devtype eq &quot;EXTERNAL_S_FLASH&quot; || (1 &lt; image_count &amp;&amp; (app1_primary_devtype eq &quot;EXTERNAL_S_FLASH&quot; || app1_secondary_devtype eq &quot;EXTERNAL_S_FLASH&quot;)) || (2 &lt; image_count &amp;&amp; (app2_primary_devtype eq &quot;EXTERNAL_S_FLASH&quot; || app2_secondary_devtype eq &quot;EXTERNAL_S_FLASH&quot;)) || (3 &lt; image_count &amp;&amp; (app3_primary_devtype eq &quot;EXTERNAL_S_FLASH&quot; || app3_secondary_devtype eq &quot;EXTERNAL_S_FLASH&quot;)) || (4 &lt; image_count &amp;&amp; (app4_primary_devtype eq &quot;EXTERNAL_S_FLASH&quot; || app4_secondary_devtype eq &quot;EXTERNAL_S_FLASH&quot;))}`" />

      <Line value="#define CY_BOOT_USE_EXTERNAL_NS_FLASH" include="`${bootloader_device eq &quot;EXTERNAL_NS_FLASH&quot; || app0_primary_devtype eq &quot;EXTERNAL_NS_FLASH&quot; || app0_secondary_devtype eq &quot;EXTERNAL_NS_FLASH&quot; || (1 &lt; image_count &amp;&amp; (app1_primary_devtype eq &quot;EXTERNAL_NS_FLASH&quot; || app1_secondary_devtype eq &quot;EXTERNAL_NS_FLASH&quot;)) || (2 &lt; image_count &amp;&amp; (app2_primary_devtype eq &quot;EXTERNAL_NS_FLASH&quot; || app2_secondary_devtype eq &quot;EXTERNAL_NS_FLASH&quot;)) || (3 &lt; image_count &amp;&amp; (app3_primary_devtype eq &quot;EXTERNAL_NS_FLASH&quot; || app3_secondary_devtype eq &quot;EXTERNAL_NS_FLASH&quot;)) || (4 &lt; image_count &amp;&amp; (app4_primary_devtype eq &quot;EXTERNAL_NS_FLASH&quot; || app4_secondary_devtype eq &quot;EXTERNAL_NS_FLASH&quot;))}`" />

      <Line value="#define CY_BOOT_USE_EXTERNAL_FLASH" include="`${bootloader_device eq &quot;EXTERNAL_S_FLASH&quot; || bootloader_device eq &quot;EXTERNAL_NS_FLASH&quot; || app0_primary_devtype eq &quot;EXTERNAL_S_FLASH&quot; || app0_primary_devtype eq &quot;EXTERNAL_NS_FLASH&quot; || app0_secondary_devtype eq &quot;EXTERNAL_S_FLASH&quot; || app0_secondary_devtype eq &quot;EXTERNAL_NS_FLASH&quot; || (1 &lt; image_count &amp;&amp; (app1_primary_devtype eq &quot;EXTERNAL_S_FLASH&quot; || app1_primary_devtype eq &quot;EXTERNAL_NS_FLASH&quot; || app1_secondary_devtype eq &quot;EXTERNAL_S_FLASH&quot; || app1_secondary_devtype eq &quot;EXTERNAL_NS_FLASH&quot;)) || (2 &lt; image_count &amp;&amp; (app2_primary_devtype eq &quot;EXTERNAL_S_FLASH&quot; || app2_primary_devtype eq &quot;EXTERNAL_NS_FLASH&quot; || app2_secondary_devtype eq &quot;EXTERNAL_S_FLASH&quot; || app2_secondary_devtype eq &quot;EXTERNAL_NS_FLASH&quot;)) || (3 &lt; image_count &amp;&amp; (app3_primary_devtype eq &quot;EXTERNAL_S_FLASH&quot; || app3_primary_devtype eq &quot;EXTERNAL_NS_FLASH&quot; || app3_secondary_devtype eq &quot;EXTERNAL_S_FLASH&quot; || app3_secondary_devtype eq &quot;EXTERNAL_NS_FLASH&quot;)) || (4 &lt; image_count &amp;&amp; (app4_primary_devtype eq &quot;EXTERNAL_S_FLASH&quot; || app4_primary_devtype eq &quot;EXTERNAL_NS_FLASH&quot; || app4_secondary_devtype eq &quot;EXTERNAL_S_FLASH&quot; || app4_secondary_devtype eq &quot;EXTERNAL_NS_FLASH&quot;))}`" />

      <!-- Key encryption key address configuration -->
      <Line value="" />
      <Line value="/* Key Encryption Key Address Configuration */" />
      <Line value="#define CUSTOM_KEY_ENC_KEY_ADDR `${key_encryption_key_address}`" include='`${image_encryption_enabled &amp;&amp; (image_encryption eq "xip_single_key" || image_encryption eq "xip_multi_keys")}`' />

      <!-- Measured boot configuration -->
      <Line value="" />
      <Line value="/* Measured Boot Configuration */" />
      <Line value="#define MCUBOOT_MEASURED_BOOT" include="`${measured_boot}`" />
      <Line value="#define MAX_BOOT_RECORD_SZ (`${max_boot_record_size}`)" include="`${measured_boot}`" />
      <Line value="#define MCUBOOT_SHARED_DATA_OFFSET (`${mcuboot_shared_data_offset}`)" include="`${measured_boot}`" />
      <Line value="#define MCUBOOT_SHARED_DATA_SIZE (`${mcuboot_shared_data_size}`)" include="`${measured_boot}`" />
      <Line value="#define MCUBOOT_DATA_SHARING" include="`${measured_boot}`" />
      <Line value="#define SW_MODULE_START_ID (1)" include="`${measured_boot}`" />

      <!-- SE RAM App staging configuration -->
      <Line value="" />
      <Line value="/* SE RAM App Staging Configuration */" />
      <Line value="#define RAM_APP_STAGING_ADDR (`${se_ram_app_staging_address}`)" include="`${stage_se_ram_app}`" />
      <Line value="#define RAM_APP_STAGING_SIZE (`${se_ram_app_staging_size}`)" include="`${stage_se_ram_app}`" />

      <!-- Image encryption configuration -->
      <Line value="" />
      <Line value="/* Image Encryption Configuration */" />
      <Line value="#define MCUBOOT_ENC_IMAGES" include='`${image_encryption_enabled}`' />

      <!-- XIP encryption -->
      <Line value="#define MCUBOOT_ENCRYPT_EC256" include='`${image_encryption_enabled &amp;&amp; (image_encryption eq "xip_single_key" || image_encryption eq "xip_multi_keys")}`' />
      <Line value="#define MCUBOOT_ENC_IMAGES_XIP" include='`${image_encryption_enabled &amp;&amp; (image_encryption eq "xip_single_key" || image_encryption eq "xip_multi_keys")}`' />
      <Line value="#define MCUBOOT_USE_PSA_CRYPTO" include='`${image_encryption_enabled &amp;&amp; (image_encryption eq "xip_single_key" || image_encryption eq "xip_multi_keys")}`' />
      
      <!-- XIP encryption single key -->
      <Line value="#define MCUBOOT_ENC_IMAGES_XIP_MULTI" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key"}`' />

      <!-- XIP encryption multi keys -->
      <Line value="#define MCUBOOT_ENC_IMAGES_XIP_MULTI_KEY_MULTY" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_multi_keys"}`' />

      <!-- SE RT encryption -->
      <Line value="#define MCUBOOT_USE_ENC_IFX_SE" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "se_rt_encryption"}`' />

      <!-- Platform Configuration -->
      <Line value="" />
      <Line value="/* Platform Configuration */" />
      <Line value="#define PLATFORM_MAX_TRAILER_PAGE_SIZE (0x200)" />

      <Line value="" />
      <Line value="#endif /* MCUBOOT_CONFIG_H */" />
    </ConfigFile>

    <!-- Generate feature_config.mk -->
    <ConfigFile name="feature_config.mk">
      <Line value="# Auto-generated feature_config.mk file" />
      <Line value="# Configuration values derived from edgeprotect-bootloader-cfg-1.0.cypersonality" />
      <Line value="# Mbedtls Configuration Paths" />
      <Line value="DEFINES += MBEDTLS_CONFIG_FILE=&quot;\&quot;`${mbedtls_crypto_config_file}`\&quot;&quot;" />
      <Line value="DEFINES += MBEDTLS_PSA_CRYPTO_CONFIG_FILE=&quot;\&quot;`${mbedtls_psa_crypto_config_file}`\&quot;&quot;" />
      <Line value="DEFINES += MBEDTLS_USER_CONFIG_FILE=&quot;\&quot;`${mbedtls_target_config_file}`\&quot;&quot;" />
      <Line value="" />
      <Line value="# HW rollback counter protection component" />
      <Line value="COMPONENTS+=MCUBOOT_SEC_CNT" include="`${hw_rollback_protection}`" />
      <Line value="" />
      <Line value="# Image validation component" />
      <Line value="COMPONENTS+=MCUBOOT_IMG_VALIDATION" />
      <Line value="" />
      <Line value="# Image encryption component" />
      <Line value="COMPONENTS+=MCUBOOT_XIP_ENC" include='`${image_encryption_enabled &amp;&amp; (image_encryption eq "xip_single_key" || image_encryption eq "xip_multi_keys")}`' />
      <Line value="" />
      <Line value="# Measured boot component" />
      <Line value="COMPONENTS+=MCUBOOT_MEASURED_BOOT" include="`${measured_boot}`" />
      <Line value="" />
      <Line value="# RRAM memory component" />
      <Line value="COMPONENTS+=MCUBOOT_RRAM_MEM" include="`${bootloader_device eq &quot;INTERNAL_RRAM&quot; || app0_primary_devtype eq &quot;INTERNAL_RRAM&quot; || app0_secondary_devtype eq &quot;INTERNAL_RRAM&quot; || (1 &lt; image_count &amp;&amp; (app1_primary_devtype eq &quot;INTERNAL_RRAM&quot; || app1_secondary_devtype eq &quot;INTERNAL_RRAM&quot;)) || (2 &lt; image_count &amp;&amp; (app2_primary_devtype eq &quot;INTERNAL_RRAM&quot; || app2_secondary_devtype eq &quot;INTERNAL_RRAM&quot;)) || (3 &lt; image_count &amp;&amp; (app3_primary_devtype eq &quot;INTERNAL_RRAM&quot; || app3_secondary_devtype eq &quot;INTERNAL_RRAM&quot;)) || (4 &lt; image_count &amp;&amp; (app4_primary_devtype eq &quot;INTERNAL_RRAM&quot; || app4_secondary_devtype eq &quot;INTERNAL_RRAM&quot;))}`" />
      <Line value="" />
      <Line value="# SRAM memory component for RAM load" />
      <Line value="COMPONENTS+=MCUBOOT_SRAM_MEM" include="`${app0_ram_load || (1 &lt; image_count &amp;&amp; app1_ram_load) || (2 &lt; image_count &amp;&amp; app2_ram_load) || (3 &lt; image_count &amp;&amp; app3_ram_load) || (4 &lt; image_count &amp;&amp; app4_ram_load)}`" />
      <Line value="" />
      <Line value="# SMIF Flash memory component" />
      <Line value="COMPONENTS+=MCUBOOT_SMIF_FLASH_MEM" include="`${bootloader_device eq &quot;EXTERNAL_S_FLASH&quot; || bootloader_device eq &quot;EXTERNAL_NS_FLASH&quot; || app0_primary_devtype eq &quot;EXTERNAL_S_FLASH&quot; || app0_primary_devtype eq &quot;EXTERNAL_NS_FLASH&quot; || app0_secondary_devtype eq &quot;EXTERNAL_S_FLASH&quot; || app0_secondary_devtype eq &quot;EXTERNAL_NS_FLASH&quot; || (1 &lt; image_count &amp;&amp; (app1_primary_devtype eq &quot;EXTERNAL_S_FLASH&quot; || app1_primary_devtype eq &quot;EXTERNAL_NS_FLASH&quot; || app1_secondary_devtype eq &quot;EXTERNAL_S_FLASH&quot; || app1_secondary_devtype eq &quot;EXTERNAL_NS_FLASH&quot;)) || (2 &lt; image_count &amp;&amp; (app2_primary_devtype eq &quot;EXTERNAL_S_FLASH&quot; || app2_primary_devtype eq &quot;EXTERNAL_NS_FLASH&quot; || app2_secondary_devtype eq &quot;EXTERNAL_S_FLASH&quot; || app2_secondary_devtype eq &quot;EXTERNAL_NS_FLASH&quot;)) || (3 &lt; image_count &amp;&amp; (app3_primary_devtype eq &quot;EXTERNAL_S_FLASH&quot; || app3_primary_devtype eq &quot;EXTERNAL_NS_FLASH&quot; || app3_secondary_devtype eq &quot;EXTERNAL_S_FLASH&quot; || app3_secondary_devtype eq &quot;EXTERNAL_NS_FLASH&quot;)) || (4 &lt; image_count &amp;&amp; (app4_primary_devtype eq &quot;EXTERNAL_S_FLASH&quot; || app4_primary_devtype eq &quot;EXTERNAL_NS_FLASH&quot; || app4_secondary_devtype eq &quot;EXTERNAL_S_FLASH&quot; || app4_secondary_devtype eq &quot;EXTERNAL_NS_FLASH&quot;))}`" />
      <Line value="" />
      <Line value="# Random number generation component" />
      <Line value="COMPONENTS+=MCUBOOT_RNG" />
    </ConfigFile>

    <!-- SignerCombiner JSON Configuration Files -->
    <ConfigFile name="boot_with_bldr.json">
      <Line value="{" />
      <Line value="    &quot;schema-version&quot;: 1.0," />
      <Line value="    &quot;content&quot;:" />
      <Line value="    [" />
      <Line value="        {" />
      <Line value="            &quot;name&quot;: &quot;sign_proj_bootloader&quot;," />
      <Line value="            &quot;enabled&quot; : true," />
      <Line value="            &quot;commands&quot; :" />
      <Line value="            [" />
      <Line value="                {" />
      <Line value="                    &quot;command&quot; : &quot;sign&quot;," />
      <Line value="                    &quot;inputs&quot; :" />
      <Line value="                    [" />
      <Line value="                        {" />
      <Line value="                            &quot;file&quot; : &quot;`${bootloader_input_hex_path}`&quot;," />
      <Line value="                            &quot;header-size&quot;: &quot;0x400&quot;," />
      <Line value="                            &quot;fill-value&quot; : &quot;`${bootloader_var_erase_val}`&quot;," />
      <Line value="                            &quot;slot-size&quot; : &quot;`${bootloader_nvm_its_MEMORY_PLACED eq true ? bootloader_var_size : toHex(0x28000)}`&quot;," />
      <Line value="                            &quot;image-version&quot; : &quot;`${bootloader_image_version}`&quot;," include='`${measured_boot}`' />
      <Line value="                            &quot;boot-record&quot; : &quot;`${bootloader_image_boot_record}`&quot;," include='`${measured_boot}`' />
      <Line value="                            &quot;signing-key&quot; : &quot;`${bootloader_signature_priv_key_path}`&quot;," include='`${bootloader_signature_enable}`' />
      <Line value="                            &quot;security-counter&quot; : &quot;`${bootloader_hw_rollback_value}`&quot;," include='`${bootloader_signature_enable}`' />
      <Line value="                            &quot;min-erase-size&quot;: &quot;0x10&quot;," />
      <Line value="                            &quot;hex-address&quot; : &quot;`${bootloader_var_resultant_addr}`&quot;" />
      <Line value="                        }" />
      <Line value="                    ]," />
      <Line value="                    &quot;outputs&quot;:" />
      <Line value="                    [" />
      <Line value="                        {" />
      <Line value="                            &quot;file&quot; : &quot;`${bootloader_output_hex_path}`&quot;," />
      <Line value="                            &quot;format&quot;: &quot;ihex&quot;" />
      <Line value="                        }" />
      <Line value="                    ]," />
      <Line value="                    &quot;extra_config&quot; : [" />
      <Line value="                        {" />
      <Line value="                            &quot;project&quot; : &quot;`${bootloader_project_name}`&quot;," />
      <Line value="                            &quot;debug_config_name&quot; : &quot;`${bootloader_project_name}`&quot;," />
      <Line value="                            &quot;default&quot; : false," />
      <Line value="                            &quot;build_dependency&quot; : &quot;project&quot;" />
      <Line value="                        }" />
      <Line value="                    ]" />
      <Line value="                }" />
      <Line value="            ]" />
      <Line value="        }," />
      <Repeat count="$MAX_APPLICATIONS">
        <Line value="        {" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="            &quot;name&quot;: &quot;Image $idx&quot;," include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="            &quot;enabled&quot; : true," include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="            &quot;commands&quot; :" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="            [" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                {" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                    &quot;command&quot; : &quot;sign&quot;," include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                    &quot;inputs&quot; :" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                    [" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                        {" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                            &quot;file&quot; : &quot;`${app$idx_input_hex_path}`&quot;," include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                            &quot;header-size&quot;: &quot;0x400&quot;," include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                            &quot;fill-value&quot; : &quot;`${app$idx_primary_var_erase_val}`&quot;," include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                            &quot;slot-size&quot; : &quot;`${app$idx_primary_var_size}`&quot;," include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                            &quot;image-version&quot; : &quot;`${app$idx_image_version}`&quot;," include='`${(measured_boot eq true || dependency_check eq true || sw_downgrade_prevention_enabled) ? $idx == 0 ? true : $idx &lt; image_count : false}`' />
        <Line value="                            &quot;boot-record&quot; : &quot;`${app$idx_image_boot_record}`&quot;," include='`${measured_boot eq true ? $idx == 0 ? true : $idx &lt; image_count : false}`' />
        <Line value="                            &quot;dependencies&quot; : &quot;`${app$idx_image_dependencies}`&quot;," include='`${dependency_check eq true ? app$idx_image_dependencies ne &quot;&quot; ? $idx == 0 ? true : $idx &lt; image_count : false : false}`' />
        <Line value="                            &quot;overwrite-only&quot; : true," include="`${upgrade_mode eq &quot;overwrite&quot; ? ($idx == 0 ? true : $idx &lt; image_count) : false }`" />
        <Line value="                            &quot;load-address&quot; : &quot;`${app$idx_ramload_address}`&quot;," include='`${app$idx_ram_load eq true ? $idx == 0 ? true : $idx &lt; image_count : false}`' />
        <Line value="                            &quot;signing-key&quot; : &quot;`${app$idx_signature_priv_key_path}`&quot;," include='`${validate_boot_slot eq true ? $idx == 0 ? true : $idx &lt; image_count : false}`' />
        <Line value="                            &quot;protected-tlv&quot; : [ { &quot;tag&quot;: &quot;0x77&quot;, &quot;value&quot;: &quot;`${app$idx_signature_key_id}`&quot; } ]," include='`${validate_boot_slot eq true ? $idx == 0 ? true : $idx &lt; image_count : false}`' />
        <Line value="                            &quot;security-counter&quot; : &quot;`${app$idx_hw_rollback_value}`&quot;," include='`${hw_rollback_protection eq true ? $idx == 0 ? true : $idx &lt; image_count : false}`' />
        <Line value="                            &quot;encryption-public-key&quot; : &quot;`${key_encryption_key_path}`&quot;," include='`${image_encryption_enabled &amp;&amp; (image_encryption eq "xip_single_key" &amp;&amp; $idx == 0)}`' />
        <Line value="                            &quot;encryption-secret-key&quot; : &quot;`${data_encryption_key_path}`&quot;," include='`${image_encryption_enabled &amp;&amp; (image_encryption eq "xip_single_key" &amp;&amp; $idx == 0)}`' />
        <Line value="                            &quot;encryption-address&quot; : &quot;`${app$idx_primary_var_resultant_addr}`&quot;," include='`${image_encryption_enabled &amp;&amp; (image_encryption eq "xip_single_key" &amp;&amp; $idx == 0)}`' />
        <Line value="                            &quot;hex-address&quot; : &quot;`${app$idx_primary_var_resultant_addr}`&quot;" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                        }" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                    ]," include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                    &quot;outputs&quot;:" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                    [" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                        {" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                            &quot;nonce-output&quot; : &quot;`${nonce_output_file_path}`&quot;," include='`${image_encryption_enabled &amp;&amp; (image_encryption eq "xip_single_key" &amp;&amp; $idx == 0)}`' />
        <Line value="                            &quot;file&quot; : &quot;`${app$idx_output_hex_path}`&quot;," include='`${(!image_encryption_enabled &amp;&amp; ($idx == 0 ? true : $idx &lt; image_count)) || (image_encryption_enabled &amp;&amp; (image_encryption eq "xip_single_key" &amp;&amp; $idx eq 0))}`' />
        <Line value="                            &quot;file&quot; : &quot;`${app$idx_output_hex_path}`_decr.hex&quot;," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;format&quot;: &quot;ihex&quot;" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                        }" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                    ]" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                    ," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx ne 0) ? false : ($idx == 0 ? true : $idx &lt; image_count)}`' />
        <Line value="                    &quot;extra_config&quot; : [" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx ne 0) ? false : ($idx == 0 ? true : $idx &lt; image_count)}`' />
        <Line value="                        {" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx ne 0) ? false : ($idx == 0 ? true : $idx &lt; image_count)}`' />
        <Line value="                            &quot;project&quot; : &quot;`${app$idx_project_name}`&quot;," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx ne 0) ? false : ($idx == 0 ? true : $idx &lt; image_count)}`' />
        <Line value="                            &quot;debug_config_name&quot; : &quot;`${app$idx_project_name}`&quot;," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx ne 0) ? false : ($idx == 0 ? true : $idx &lt; image_count)}`' />
        <Line value="                            &quot;default&quot; : false," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx ne 0) ? false : ($idx == 0 ? true : $idx &lt; image_count)}`' />
        <Line value="                            &quot;build_dependency&quot; : &quot;project&quot;" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx ne 0) ? false : ($idx == 0 ? true : $idx &lt; image_count)}`' />
        <Line value="                        }" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx ne 0) ? false : ($idx == 0 ? true : $idx &lt; image_count)}`' />
        <Line value="                    ]" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx ne 0) ? false : ($idx == 0 ? true : $idx &lt; image_count)}`' />
        <Line value="                }" include='`${$idx == 0 ? true : $idx &lt; image_count}`' />
       
        <!-- Encrypt the second, third, ... images for XIP encryption case with single AES key -->
        <!-- Convert already signed image to bin format -->
        <Line value="                ," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                {" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    &quot;command&quot; : &quot;hex2bin&quot;," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    &quot;inputs&quot; : [" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                        {" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;file&quot; : &quot;`${app$idx_output_hex_path}`_decr.hex&quot;" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                        }" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    ]," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    &quot;outputs&quot; : [" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                        {" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;file&quot; : &quot;`${app$idx_output_hex_path}`_decr.bin&quot;" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                        }" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    ]" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                }," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <!-- Encrypt full image including Header and TLVs  -->
        <Line value="                {" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    &quot;command&quot; : &quot;encrypt-aes&quot;," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    &quot;inputs&quot; : [" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                        {" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;file&quot; : &quot;`${app$idx_output_hex_path}`_decr.bin&quot;," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;key&quot; : &quot;`${data_encryption_key_path}`&quot;," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;cipher-mode&quot; : &quot;ECB&quot;," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;iv&quot; : &quot;`${app$idx_primary_var_resultant_addr}`&quot;," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;add-iv&quot; : false," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;nonce&quot; : &quot;`${nonce_output_file_path}`&quot;" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                        }" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    ]," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    &quot;outputs&quot; : [" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                        {" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;file&quot; : &quot;`${app$idx_output_hex_path}`.bin&quot;" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                        }" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    ]" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                }," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <!-- Convert already encrypted image to hex format -->
        <Line value="                {" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    &quot;command&quot; : &quot;bin2hex&quot;," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    &quot;inputs&quot; : [" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                        {" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;file&quot; : &quot;`${app$idx_output_hex_path}`.bin&quot;," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;offset&quot; : &quot;`${app$idx_primary_var_resultant_addr}`&quot;" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                        }" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    ]," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    &quot;outputs&quot; : [" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                        {" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;file&quot; : &quot;`${app$idx_output_hex_path}`&quot;" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                        }" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    ]," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    &quot;extra_config&quot; : [" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                        {" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;project&quot; : &quot;`${app$idx_project_name}`&quot;," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;debug_config_name&quot; : &quot;`${app$idx_project_name}`&quot;," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;default&quot; : false," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;build_dependency&quot; : &quot;project&quot;" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                        }" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    ]" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                }" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="            ]" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="        }," include="`${($idx == 0 ? true : $idx &lt; image_count) &amp;&amp; ($idx + 1) &lt; image_count}`" />
        <Line value="        }" include="`${($idx == 0 ? true : $idx &lt; image_count) &amp;&amp; ($idx + 1) &gt;= image_count}`" />
      </Repeat>
      <Line value="," />
      <Line value="        {" />
      <Line value="            &quot;name&quot;: &quot;merge&quot;," />
      <Line value="            &quot;enabled&quot;: true," />
      <Line value="            &quot;commands&quot; :" />
      <Line value="            [" />
      <Line value="                {" />
      <Line value="                    &quot;command&quot; : &quot;merge&quot;," />
      <Line value="                    &quot;inputs&quot; :" />
      <Line value="                    [" />
      <Line value="                        {" />
      <Line value="                            &quot;file&quot; : &quot;`${bootloader_output_hex_path}`&quot;" />
      <Line value="                        }," />
      <Repeat count="$MAX_APPLICATIONS">
        <Line value="                        {" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                            &quot;file&quot; : &quot;`${app$idx_output_hex_path}`&quot;" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                        }," include="`${($idx == 0 ? true : $idx &lt; image_count) &amp;&amp; ($idx + 1) &lt; image_count}`" />
        <Line value="                        }" include="`${($idx == 0 ? true : $idx &lt; image_count) &amp;&amp; ($idx + 1) &gt;= image_count}`" />
      </Repeat>
      <Line value="                    ]," />
      <Line value="                    &quot;outputs&quot; :" />
      <Line value="                    [" />
      <Line value="                        {" />
      <Line value="                            &quot;file&quot; : &quot;../../../../build/app_combined.hex&quot;," />
      <Line value="                            &quot;format&quot; : &quot;ihex&quot;," />
      <Line value="                            &quot;overlap&quot; : &quot;ignore&quot;" />
      <Line value="                        }" />
      <Line value="                    ]" />
      <Line value="                }" />
      <Line value="            ]" />
      <Line value="        }" />
      <Line value="    ]" />
      <Line value="}" />
    </ConfigFile>

    <ConfigFile name="boot_with_bldr_upgr.json">
      <Line value="{" />
      <Line value="    &quot;schema-version&quot;: 1.0," />
      <Line value="    &quot;content&quot;:" />
      <Line value="    [" />
      <Repeat count="$MAX_APPLICATIONS">
        <Line value="        {" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="            &quot;name&quot;: &quot;Image $idx&quot;," include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="            &quot;enabled&quot; : true," include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="            &quot;commands&quot; :" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="            [" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                {" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                    &quot;command&quot; : &quot;sign&quot;," include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                    &quot;inputs&quot; :" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                    [" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                        {" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                            &quot;file&quot; : &quot;`${app$idx_input_hex_path}`&quot;," include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                            &quot;header-size&quot;: &quot;0x400&quot;," include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                            &quot;fill-value&quot; : &quot;`${app$idx_secondary_var_erase_val}`&quot;," include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                            &quot;slot-size&quot; : &quot;`${app$idx_secondary_var_size > app$idx_primary_var_size ? app$idx_primary_var_size : app$idx_secondary_var_size}`&quot;," include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                            &quot;image-version&quot; : &quot;`${app$idx_image_version}`&quot;," include='`${(measured_boot eq true || dependency_check eq true || sw_downgrade_prevention_enabled) ? $idx == 0 ? true : $idx &lt; image_count : false}`' />
        <Line value="                            &quot;boot-record&quot; : &quot;`${app$idx_image_boot_record}`&quot;," include='`${measured_boot eq true ? $idx == 0 ? true : $idx &lt; image_count : false}`' />
        <Line value="                            &quot;dependencies&quot; : &quot;`${app$idx_image_dependencies}`&quot;," include='`${dependency_check eq true ? app$idx_image_dependencies ne &quot;&quot; ? $idx == 0 ? true : $idx &lt; image_count : false : false}`' />
        <Line value="                            &quot;overwrite-only&quot; : true," include="`${upgrade_mode eq &quot;overwrite&quot; ? ($idx == 0 ? true : $idx &lt; image_count) : false }`" />
        <Line value="                            &quot;load-address&quot; : &quot;`${app$idx_ramload_address}`&quot;," include='`${app$idx_ram_load eq true ? $idx == 0 ? true : $idx &lt; image_count : false}`' />
        <Line value="                            &quot;signing-key&quot; : &quot;`${app$idx_signature_priv_key_path}`&quot;," include='`${validate_upgrade_slot eq true ? $idx == 0 ? true : $idx &lt; image_count : false}`' />
        <Line value="                            &quot;protected-tlv&quot; : [ { &quot;tag&quot;: &quot;0x77&quot;, &quot;value&quot;: &quot;`${app$idx_signature_key_id}`&quot; } ]," include='`${validate_upgrade_slot eq true ? $idx == 0 ? true : $idx &lt; image_count : false}`' />
        <Line value="                            &quot;security-counter&quot; : &quot;`${app$idx_hw_rollback_value}`&quot;," include='`${hw_rollback_protection eq true ? $idx == 0 ? true : $idx &lt; image_count : false}`' />
        <Line value="                            &quot;encryption-public-key&quot; : &quot;`${key_encryption_key_path}`&quot;," include='`${image_encryption_enabled &amp;&amp; (image_encryption eq "xip_single_key" &amp;&amp; $idx == 0)}`' />
        <Line value="                            &quot;encryption-secret-key&quot; : &quot;`${data_encryption_key_path}`&quot;," include='`${image_encryption_enabled &amp;&amp; (image_encryption eq "xip_single_key" &amp;&amp; $idx == 0)}`' />
        <Line value="                            &quot;encryption-address&quot; : &quot;`${app$idx_secondary_var_resultant_addr}`&quot;," include='`${image_encryption_enabled &amp;&amp; (image_encryption eq "xip_single_key" &amp;&amp; $idx == 0)}`' />
        <Line value="                            &quot;hex-address&quot; : &quot;`${app$idx_secondary_var_resultant_addr}`&quot;," include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                            &quot;pad&quot;: true" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                        }" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                    ]," include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                    &quot;outputs&quot;:" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                    [" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                        {" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                            &quot;nonce-output&quot; : &quot;`${nonce_output_file_path}`&quot;," include='`${image_encryption_enabled &amp;&amp; (image_encryption eq "xip_single_key" &amp;&amp; $idx == 0)}`' />
        <Line value="                            &quot;file&quot; : &quot;`${app$idx_output_hex_path}`&quot;," include='`${(!image_encryption_enabled &amp;&amp; ($idx == 0 ? true : $idx &lt; image_count)) || (image_encryption_enabled &amp;&amp; (image_encryption eq "xip_single_key" &amp;&amp; $idx eq 0))}`' />
        <Line value="                            &quot;file&quot; : &quot;`${app$idx_output_hex_path}`_decr.hex&quot;," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;format&quot;: &quot;ihex&quot;" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                        }" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                    ]" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                    ," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx ne 0) ? false : ($idx == 0 ? true : $idx &lt; image_count)}`' />
        <Line value="                    &quot;extra_config&quot; : [" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx ne 0) ? false : ($idx == 0 ? true : $idx &lt; image_count)}`' />
        <Line value="                        {" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx ne 0) ? false : ($idx == 0 ? true : $idx &lt; image_count)}`' />
        <Line value="                            &quot;project&quot; : &quot;`${app$idx_project_name}`&quot;," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx ne 0) ? false : ($idx == 0 ? true : $idx &lt; image_count)}`' />
        <Line value="                            &quot;debug_config_name&quot; : &quot;`${app$idx_project_name}`&quot;," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx ne 0) ? false : ($idx == 0 ? true : $idx &lt; image_count)}`' />
        <Line value="                            &quot;default&quot; : false," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx ne 0) ? false : ($idx == 0 ? true : $idx &lt; image_count)}`' />
        <Line value="                            &quot;build_dependency&quot; : &quot;project&quot;" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx ne 0) ? false : ($idx == 0 ? true : $idx &lt; image_count)}`' />
        <Line value="                        }" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx ne 0) ? false : ($idx == 0 ? true : $idx &lt; image_count)}`' />
        <Line value="                    ]" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx ne 0) ? false : ($idx == 0 ? true : $idx &lt; image_count)}`' />
        <Line value="                }" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        
        <!-- Encrypt the second, third, ... images for XIP encryption case with single AES key -->
        <!-- Convert already signed image to bin format -->
        <Line value="                ," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                {" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    &quot;command&quot; : &quot;hex2bin&quot;," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    &quot;inputs&quot; : [" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                        {" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;file&quot; : &quot;`${app$idx_output_hex_path}`_decr.hex&quot;" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                        }" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    ]," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    &quot;outputs&quot; : [" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                        {" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;file&quot; : &quot;`${app$idx_output_hex_path}`_decr.bin&quot;" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                        }" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    ]" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                }," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <!-- Encrypt full image including Header and TLVs  -->
        <Line value="                {" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    &quot;command&quot; : &quot;encrypt-aes&quot;," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    &quot;inputs&quot; : [" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                        {" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;file&quot; : &quot;`${app$idx_output_hex_path}`_decr.bin&quot;," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;key&quot; : &quot;`${data_encryption_key_path}`&quot;," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;cipher-mode&quot; : &quot;ECB&quot;," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;iv&quot; : &quot;`${app$idx_secondary_var_resultant_addr}`&quot;," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;add-iv&quot; : false," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;nonce&quot; : &quot;`${nonce_output_file_path}`&quot;" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                        }" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    ]," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    &quot;outputs&quot; : [" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                        {" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;file&quot; : &quot;`${app$idx_output_hex_path}`.bin&quot;" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                        }" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    ]" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                }," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <!-- Convert already encrypted image to hex format -->
        <Line value="                {" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    &quot;command&quot; : &quot;bin2hex&quot;," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    &quot;inputs&quot; : [" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                        {" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;file&quot; : &quot;`${app$idx_output_hex_path}`.bin&quot;," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;offset&quot; : &quot;`${app$idx_secondary_var_resultant_addr}`&quot;" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                        }" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    ]," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    &quot;outputs&quot; : [" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                        {" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;file&quot; : &quot;`${app$idx_output_hex_path}`&quot;" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                        }" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    ]," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    &quot;extra_config&quot; : [" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                        {" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;project&quot; : &quot;`${app$idx_project_name}`&quot;," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;debug_config_name&quot; : &quot;`${app$idx_project_name}`&quot;," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;default&quot; : false," include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                            &quot;build_dependency&quot; : &quot;project&quot;" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                        }" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                    ]" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="                }" include='`${image_encryption_enabled &amp;&amp; image_encryption eq "xip_single_key" &amp;&amp; ($idx == 0 ? false : $idx &lt; image_count)}`' />
        <Line value="            ]" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="        }," include="`${($idx == 0 ? true : $idx &lt; image_count) &amp;&amp; ($idx + 1) &lt; image_count}`" />
        <Line value="        }" include="`${($idx == 0 ? true : $idx &lt; image_count) &amp;&amp; ($idx + 1) &gt;= image_count}`" />
      </Repeat>
      <Line value="," />
      <Line value="        {" />
      <Line value="            &quot;name&quot;: &quot;merge&quot;," />
      <Line value="            &quot;enabled&quot;: true," />
      <Line value="            &quot;commands&quot; :" />
      <Line value="            [" />
      <Line value="                {" />
      <Line value="                    &quot;command&quot; : &quot;merge&quot;," />
      <Line value="                    &quot;inputs&quot; :" />
      <Line value="                    [" />
      <Repeat count="$MAX_APPLICATIONS">
        <Line value="                        {" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                            &quot;file&quot; : &quot;`${app$idx_output_hex_path}`&quot;" include="`${$idx == 0 ? true : $idx &lt; image_count}`" />
        <Line value="                        }," include="`${($idx == 0 ? true : $idx &lt; image_count) &amp;&amp; ($idx + 1) &lt; image_count}`" />
        <Line value="                        }" include="`${($idx == 0 ? true : $idx &lt; image_count) &amp;&amp; ($idx + 1) &gt;= image_count}`" />
      </Repeat>
      <Line value="                    ]," />
      <Line value="                    &quot;outputs&quot; :" />
      <Line value="                    [" />
      <Line value="                        {" />
      <Line value="                            &quot;file&quot; : &quot;../../../../build/app_combined.hex&quot;," />
      <Line value="                            &quot;format&quot; : &quot;ihex&quot;," />
      <Line value="                            &quot;overlap&quot; : &quot;ignore&quot;" />
      <Line value="                        }" />
      <Line value="                    ]" />
      <Line value="                }" />
      <Line value="            ]" />
      <Line value="        }" />
      <Line value="    ]" />
      <Line value="}" />
    </ConfigFile>
  </ConfigFirmware>

  <!-- ########################### -->
  <!-- ITS memory -->
  <PersonalityTemplate id="reserved_memory_region_its" valid="`${getParamValue(&quot;edgeprotect_bootloader_cfg&quot;,&quot;bootloader_nvm_its_MEMORY_PLACED&quot;)}`">
    <FittingRules>
      <MappingRules>
        <IpBlock name="VirtualResource" />
        <Resource name="vres\.reserved_memory_region" />
        <OperatingMode value="MCU" />
      </MappingRules>
    </FittingRules>
    <!-- Removed ExposedMembers section to conform to schema v13 -->

  </PersonalityTemplate>
  <!-- ########################### -->

  <PersonalityTemplate id="reserved_memory_region_bootloader" valid="`${getParamValue(&quot;edgeprotect_bootloader_cfg&quot;,&quot;bootloader_sram_region_MEMORY_PLACED&quot;)}`">
    <FittingRules>
      <MappingRules>
        <IpBlock name="VirtualResource" />
        <Resource name="vres\.reserved_memory_region" />
        <OperatingMode value="MCU" />
      </MappingRules>
    </FittingRules>
    <!-- Removed ExposedMembers section to conform to schema v13 -->
    <Parameters>
      <!-- Adding required Parameters section -->
      <ParamString id="guid_param" default="C6A2E8F1-4B7D-4E9A-6C3F-5D8A2B7E4C9F" visible="false" editable="false" group="" name="" desc="" />
      <ParamString id="name_param" default="BOOTLOADER_SRAM" visible="false" editable="false" group="" name="" desc="" />
      <ParamString id="size_param" default="0x00001000" visible="false" editable="false" group="" name="" desc="" />
      <ParamString id="cores_param" default="CORE_NAME_CM33_0_S" visible="false" editable="false" group="" name="" desc="" />
      <ParamString id="memory_param" default="SRAM" visible="false" editable="false" group="" name="" desc="" />
      <ParamString id="capabilities_param" default="Secure,Readable,Writable" visible="false" editable="false" group="" name="" desc="" />
    </Parameters>
  </PersonalityTemplate>

  <PersonalityTemplate id="reserved_memory_region_bootloader_code" valid="`${getParamValue(&quot;edgeprotect_bootloader_cfg&quot;,&quot;bootloader_sram_code_region_MEMORY_PLACED&quot;)}`">
    <FittingRules>
      <MappingRules>
        <IpBlock name="VirtualResource" />
        <Resource name="vres\.reserved_memory_region" />
        <OperatingMode value="MCU" />
      </MappingRules>
    </FittingRules>
    <Parameters>
      <!-- Adding required Parameters section -->
      <ParamString id="guid_param" default="F9D3C7A5-8E2B-4F6D-9A4C-7B1E5F8A3D6C" visible="false" editable="false" group="" name="" desc="" />
      <ParamString id="name_param" default="BOOTLOADER_SRAM_CODE" visible="false" editable="false" group="" name="" desc="" />
      <ParamString id="size_param" default="0x00001000" visible="false" editable="false" group="" name="" desc="" />
      <ParamString id="cores_param" default="CORE_NAME_CM33_0_S" visible="false" editable="false" group="" name="" desc="" />
      <ParamString id="memory_param" default="SRAM" visible="false" editable="false" group="" name="" desc="" />
      <ParamString id="capabilities_param" default="Secure,Readable,Writable,Executable" visible="false" editable="false" group="" name="" desc="" />
    </Parameters>
  </PersonalityTemplate>

</PersonalityTemplate>
